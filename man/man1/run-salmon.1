.TH RUN-SALMON 1 2019-12-11 Bash
.SH NAME
run-salmon \-
Run salmon on multiple FASTQs inside a directory.
.SH SYNOPSIS
.B run-salmon
\fB\-\-fasta-file\fP=\fI"XXX.fa.gz"\fP
\fB\-\-index-dir\fP=\fI"salmon/index/"\fP
[\fB\-\-fastq-dir\fP=\fI"fastq/"\fP]
[\fB\-\-output-dir\fP=\fI"salmon/"\fP]
.SH OPTIONS
.TP
.B \-\-fasta-file
Transcriptome-level (i.e. cDNA) FASTA file.
Ensembl or GENCODE reference is recommended over RefSeq or UCSC.
This will generate a new salmon index, which gets saved in the output directory specified by \fB--output-dir\fP.
Example: 'Homo_sapiens.GRCh38.cdna.all.fa.gz'.
.TP
[OR]
.TP
.B \-\-index-dir
Salmon index directory, previously generated using \fBsalmon index\fP.
If \fB--fasta-file\fP is defined, this gets generated on the fly.
Example: 'salmon/index/'.
.TP
.B \-\-fastq-dir
Directory path containing paired-end FASTQ files.
.TP
.B \-\-output-dir
Output directory path.
.TP
.B \-\-r1-tail \-\-r2-tail
Paired-end FASTQ R1 and R2 file suffix tail.
This also can commonly be '_R1.fq.gz' (fastq-dump) or '_1.fq.gz' (fasterq-dump) for sra-tools output.
Note that regular expression matching is not yet supported here.
.SH DESCRIPTION
This script supports quick analysis of multiple paired-end FASTQ samples inside a directory.
It builds a salmon index on the fly, if necessary (unless the \fB--index-file\fP argument is set), and outputs per sample automatically.
The script will intentionally error if the output directory specified by
\fB--output-dir\fP already exists, to prevent accidental overwrite.
.SS Strandedness
salmon quant args:
.PP
                    | Paired-end | Single-end |
    ----------------|------------|------------|
    fr-unstranded   | -l IU      | -l U       |
    fr-firststrand  | -l ISR     | -l SR      |
    fr-secondstrand | -l ISF     | -l SF      |
.PP
Illumina TruSeq stranded library type is first read reverse.
This corresponds to 'ISR' for salmon quant.
Previously, this was \fB--library-type fr-firststrand\fP for TopHat.
.PP
The \fB--libType A\fP argument will allow Salmon to automatically infer the library type.
Check the run log for the strand information.
.SH SEE ALSO
.IP
\(bu salmon quant --help-reads
.IP
\(bu https://salmon.readthedocs.io/en/latest/library_type.html
.IP
\(bu https://github.com/bcbio/bcbio-nextgen/blob/master/bcbio/rnaseq/
.IP
\(bu https://fishycat.netlify.com/en/2017/08/strandness_in_rnaseq/
