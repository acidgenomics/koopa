linters: linters_with_defaults(
    # Updated 2022-05-23.
    # > help(topic = "linters", package = "lintr")
    absolute_path_linter(),
    any_duplicated_linter(),
    any_is_na_linter(),
    assignment_linter(),
    backport_linter(),
    brace_linter(),
    class_equals_linter(),
    commas_linter(),
    commented_code_linter(),
    condition_message_linter(),
    conjunct_test_linter(),
    consecutive_stopifnot_linter(),
    cyclocomp_linter(),
    duplicate_argument_linter(),
    equals_na_linter(),
    expect_comparison_linter(),
    expect_identical_linter(),
    expect_length_linter(),
    expect_named_linter(),
    expect_not_linter(),
    expect_null_linter(),
    expect_s3_class_linter(),
    expect_s4_class_linter(),
    expect_true_false_linter(),
    extraction_operator_linter(),
    function_left_parentheses_linter(),
    ifelse_censor_linter(),
    implicit_integer_linter(),
    infix_spaces_linter(),
    inner_combine_linter(),
    line_length_linter(80),
    literal_coercion_linter(),
    missing_argument_linter(),
    missing_package_linter(),
    namespace_linter(),
    nested_ifelse_linter(),
    no_tab_linter(),
    # This is currently returning too many false positives.
    # > nonportable_path_linter = NULL,
    numeric_leading_zero_linter(),
    object_length_linter(40),
    object_name_linter("camelCase"),
    object_usage_linter(),
    outer_negation_linter(),
    package_hooks_linter(),
    paren_body_linter(),
    paste_linter(),
    pipe_call_linter(),
    pipe_continuation_linter(),
    redundant_ifelse_linter(),
    regex_subset_linter(),
    semicolon_linter(),
    seq_linter(),
    single_quotes_linter(),
    spaces_inside_linter(),
    spaces_left_parentheses_linter(),
    sprintf_linter(),
    system_file_linter(),
    T_and_F_symbol_linter(),
    todo_comment_linter(),
    trailing_blank_lines_linter(),
    trailing_whitespace_linter(),
    undesirable_function_linter(),
    undesirable_operator_linter(),
    unneeded_concatenation_linter(),
    unreachable_code_linter(),
    vector_logic_linter(),
    yoda_test_linter())
exclude: "# nolint"
exclude_start: "# nolint start"
exclude_end: "# nolint end"
