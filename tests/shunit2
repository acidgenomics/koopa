#!/usr/bin/env bash

# shellcheck source=/dev/null
source "$(dirname "${BASH_SOURCE[0]}")/../lang/shell/bash/include/header.sh"

main() { # {{{1
    # """
    # Run shUnit2 tests.
    # @note Updated 2022-02-17.
    #
    # @seealso
    # - https://github.com/kward/shunit2
    # """
    local app dict
    declare -A app=(
        [cut]="$(koopa_locate_cut)"
        [grep]="$(koopa_locate_grep)"
        [shunit2]="$(koopa_locate_shunit2)"
        [sort]="$(koopa_locate_sort)"
    )
    declare -A dict=(
        [extra]=0
        [shunit2_dir]="$(koopa_koopa_prefix)/tests/shunit2.d"
    )
    while (("$#"))
    do
        case "$1" in
            --extra)
                dict[extra]=1
                shift 1
                ;;
            *)
                koopa_invalid_arg "$1"
                ;;
        esac
    done
    koopa_alert 'Running unit tests with shUnit2.'
    # Don't exit on errors, which are handled by shunit2.
    set +o errexit
    suite() {
        koopa_source_dir "${dict[shunit2_dir]}"
        if [[ "${dict[extra]}" -eq 1 ]]
        then
            koopa_source_dir "${dict[shunit2_dir]}/extra"
        fi
        readarray -t tests <<< "$( \
            declare -F \
                | "${app[cut]}" --delimiter=' ' --fields='3' \
                | "${app[grep]}" --extended-regexp '^test_' \
                | "${app[sort]}" \
        )"
        for test in "${tests[@]}"
        do
            suite_addTest "$test"
        done
    }
    source "${app[shunit2]}"
    return 0
}

main "$@"
