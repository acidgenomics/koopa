#!/usr/bin/env bash

KOOPA_PREFIX="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." \
    >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${KOOPA_PREFIX}/shell/bash/include/header.sh"

extra=0
force=0

pos=()
while (("$#"))
do
    case "$1" in
        --extra)
            extra=1
            shift 1
            ;;
        --force)
            force=1
            shift 1
            ;;
        --)
            shift 1
            break
            ;;
        --*|-*)
            _koopa_invalid_arg "$1"
            ;;
        *)
            pos+=("$1")
            shift 1
            ;;
    esac
done
set -- "${pos[@]}"

# Define images array.
# If empty, define default images.
if [[ "$#" -eq 0 ]]
then
    images=()

    # Minimal bioinformatics images.
    images+=(
        acidgenomics/miniconda3
        acidgenomics/biocontainers
    )

    # Recommended Linux images.
    images+=(
        acidgenomics/debian
        acidgenomics/ubuntu
        acidgenomics/fedora
        acidgenomics/centos
    )

    # R images.
    images+=(
        acidgenomics/bioconductor
        acidgenomics/r-basejump
        acidgenomics/r-bcbiornaseq
        acidgenomics/r-bcbiosinglecell
        acidgenomics/r-rnaseq
        acidgenomics/r-singlecell
    )

    # Extra Linux images.
    images+=(
        acidgenomics/alpine
        acidgenomics/amzn
        acidgenomics/arch
        acidgenomics/kali
        acidgenomics/opensuse
    )

    # AWS batch images.
    prefix="${HOME}/.config/koopa/docker"
    batch_dirs="$( \
        find "$prefix" \
            -name "aws-batch*" \
            -type d \
            | sort \
    )"
    batch_dirs="$(_koopa_sub "$batch_dirs" "${prefix}/" '')"
    mapfile -t batch_arr <<< "$(_koopa_print "$batch_dirs")"
    images=("${images[@]}" "${batch_arr[@]}")

    # Large bioinformatics images.
    # These don't need to be updated frequently and can be built manually instead.
    if [[ "$extra" -eq 1 ]]
    then
        images+=(
            acidgenomics/bcbio-nextgen
            acidgenomics/rnaeditingindexer
            acidgenomics/maestro
        )
fi
else
    images=("$@")
fi

_koopa_h1 "Building ${#images[@]} Docker images."

docker login

for image in "${images[@]}"
do
    docker system prune --all --force

    # Skip image if pushed already today.
    if [[ "$force" -ne 1 ]]
    then
        docker pull "$image"
        json="$( \
            docker inspect \
            --format='{{json .Created}}' \
            "$image" \
        )"
        # Note that we need to convert UTC to local time.
        utc_timestamp="$( \
            _koopa_print "$json" \
                | grep -Eo '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}' \
                | sed 's/T/ /' \
                | sed 's/$/ UTC/'
        )"
        timestamp="$(date -d "$utc_timestamp" '+%Y-%m-%d')"
        today=$(date '+%Y-%m-%d')
        if [[ "$timestamp" == "$today" ]]
        then
            _koopa_note "'${image}' image already pushed today."
            continue
        fi
    fi

    # Build outdated images automatically.
    docker-build-all-tags "$image"
done

docker system prune --all --force

_koopa_success "All Docker images built successfully."
