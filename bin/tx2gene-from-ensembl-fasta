#!/usr/bin/env bash

KOOPA_HOME="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." \
    >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${KOOPA_HOME}/shell/bash/include/header.sh"

_koopa_help "$@"
_koopa_assert_has_args "$@"



# Notes                                                                     {{{1
# ==============================================================================

# Remove duplicate lines.
# Note that awk is significantly faster than sort for large files.
# https://stackoverflow.com/questions/9377040
# > sort -u tx2gene.csv

# Outputting as CSV instead of TSV.
# > paste -d "," \
# >     <(cut -d '>' -f2 .t2g1 | cut -d ' ' -f1) \
# >     <(cut -d ' ' -f2 .t2g1 | cut -d ':' -f2) >> \
# >     .t2g2



# Arguments                                                                 {{{1
# ==============================================================================

fasta_file="$1"
output_file="${2:-"tx2gene.csv"}"

_koopa_assert_is_file "$fasta_file"
_koopa_assert_is_matching_fixed "$fasta_file" ".cdna.all.fa.gz"
_koopa_assert_is_not_file "$output_file"



# Script                                                                    {{{1
# ==============================================================================

_koopa_message "Generating '$(basename "$output_file")' from \
'$(basename "$fasta_file")'."

gunzip -c "$fasta_file" \
    | grep '>' \
    | cut -d ' ' -f1,4 \
    | awk '!a[$0]++' \
    | tr -d '>' \
    | sed -E 's/ [a-z]+:/,/g' \
    > "$output_file"

# Return the number of transcripts.
count="$(_koopa_line_count "$output_file")"
_koopa_message "${count} transcripts detected."
