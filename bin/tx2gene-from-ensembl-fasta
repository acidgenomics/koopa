#!/usr/bin/env bash

KOOPA_HOME="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." \
    >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${KOOPA_HOME}/shell/bash/include/header.sh"



# Notes                                                                     {{{1
# ==============================================================================

# Remove duplicate lines.
# Note that awk is significantly faster than sort for large files.
# https://stackoverflow.com/questions/9377040
# > sort -u tx2gene.csv

# Outputting as CSV instead of TSV.
# > paste -d "," \
# >     <(cut -d '>' -f2 .t2g1 | cut -d ' ' -f1) \
# >     <(cut -d ' ' -f2 .t2g1 | cut -d ':' -f2) >> \
# >     .t2g2



# Variables                                                                 {{{1
# ==============================================================================

output_file="tx2gene.csv"



# Usage                                                                     {{{1
# ==============================================================================

usage() {
cat << EOF
$(_koopa_help_header)
    fasta_file

Generate transcript-to-gene mappings from Ensembl FASTA.

details:
    Ensembl GTF files do not contain complete transcript-to-gene mappings.
    This is particularly an issue for Homo sapiens reference genome.

    This script generates a '${output_file}' mapping file from the reference
    transcriptome input instead, suitable for use with 'tximport()' in R.

    Assumes input FASTA is gzip compressed.

    Note that transcript and gene identifier versions are maintained in the
    output.
    
    Internal processing steps:
    1. Decompress FASTA and pipe to stdout.
    2. Keep only headers prefixed with '>'.
    3. Keep only transcript (1) and gene (4) identifier columns.
    4. Remove duplicate lines.
    5. Trim header prefix '>'.
    6. Prepare ',' delim for CSV output.
    7. Write to '${output_file}'.

see also:
    Modified version of @ag1805x script.
    - https://support.bioconductor.org/p/123134/
    - https://gist.github.com/ag1805x/63007cf0ba20b078d6d3c849064a1bff

note:
    Bash script.
    Updated 2019-10-05.
EOF
}

[[ -z "$*" ]] && usage && exit 0
_koopa_help "$@"



# Arguments                                                                 {{{1
# ==============================================================================

fasta_file="$1"



# Script                                                                    {{{1
# ==============================================================================

printf "Generating '%s' from '%s'.\n" "$output_file" "$fasta_file"

_koopa_assert_is_not_file "$output_file"

# Check for Ensembl transcriptome input.
pattern=".cdna.all.fa.gz"
if ! echo "$fasta_file" | grep -q "$pattern"
then
    >&2 printf "Error: Not Ensembl transcriptome FASTA: '%s'.\n" "$fasta_file"
    exit 1
fi

gunzip -c "$fasta_file" | \
    grep '>' | \
    cut -d ' ' -f1,4 | \
    awk '!a[$0]++' | \
    tr -d '>' | \
    sed -E 's/ [a-z]+:/,/g' > \
    "$output_file"

# Return the number of transcripts.
count="$(_koopa_line_count "$output_file")"
printf "%d transcripts detected.\n" "$count"
