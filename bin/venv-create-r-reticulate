#!/usr/bin/env bash
set -Eeu -o pipefail

KOOPA_PREFIX="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." \
    >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${KOOPA_PREFIX}/shell/bash/include/header.sh"

_koopa_assert_has_no_envs
_koopa_assert_is_installed python3 python

if _koopa_is_macos
then
    # These compiler flags are now required for scikit-learn to compile, which
    # now requires OpenMP that is unsupported by system default gcc alias.
    # Ensure that we're using the correct Clang and LLVM settings.
    #
    # Refer to 'system/activate/program.sh' for LLVM_CONFIG export.
    #
    # clang: error: unsupported option '-fopenmp'
    # brew info libomp
    #
    # See also:
    # - http://llvmlite.pydata.org/
    # - https://github.com/scikit-learn/scikit-learn/issues/13371
    # - https://scikit-learn.org/dev/developers/advanced_installation.html

    # System Clang (Xcode)
    export CC="/usr/bin/clang"
    export CXX="/usr/bin/clang++"
    export CFLAGS="${CFLAGS:-} -I/usr/local/opt/libomp/include"
    export CPPFLAGS="${CPPFLAGS:-} -Xpreprocessor -fopenmp"
    export CXXFLAGS="${CXXFLAGS:-} -I/usr/local/opt/libomp/include"
    export DYLD_LIBRARY_PATH="/usr/local/opt/libomp/lib"
    export LDFLAGS="${LDFLAGS:-} -L/usr/local/opt/libomp/lib -lomp"
fi

# Check that LLVM 7 is configured correctly.
# umap-learn > numba > llvmlite
# Note that llvmlite currently requires LLVM 7.
# https://github.com/numba/llvmlite/issues/523
if [[ -z "${LLVM_CONFIG:-}" ]]
then
    _koopa_stop "Export 'LLVM_CONFIG' to locate LLVM llvm-config binary."
fi

# Re-enable this if llvmlite errors due to a new, unsupported LLVM version.
# > llvm_ver="$("$LLVM_CONFIG" --version)"
# > llvm_ver="$(_koopa_major_version "$llvm_ver")"
# > llvm_ver_ok="7"
# > if [[ "$llvm_ver" != "$llvm_ver_ok" ]]
# > then
# >     _koopa_stop "Failed to detect LLVM '${llvm_ver_ok}' via 'LLVM_CONFIG'."
# > fi

name="r-reticulate"
prefix="$(_koopa_venv_prefix)/${name}"

_koopa_h1 "Installing Python '${name}' environment at '${prefix}'."
_koopa_info "LLVM_CONFIG: '${LLVM_CONFIG}'."

rm -fr "$prefix"
_koopa_prefix_mkdir "$prefix"

python3 -m venv "$prefix"
py_exe="${prefix}/bin/python3"

"$py_exe" -m pip install --upgrade pip
"$py_exe" -m pip install Cython
# Depends on: numpy, scipy, joblib, scikit-learn, llvmlite, numba
"$py_exe" -m pip install umap-learn
"$py_exe" -m pip install louvain
"$py_exe" -m pip list

_koopa_set_permissions "$prefix"
