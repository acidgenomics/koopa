#!/usr/bin/env bash

set -o errexit  # -e
set -o errtrace  # -E
set -o nounset  # -u
set -o pipefail

__koopa_is_installed() { # {{{1
    # """
    # Are all of the requested programs installed?
    # @note Updated 2021-05-07.
    # """
    local cmd
    for cmd in "$@"
    do
        command -v "$cmd" >/dev/null || return 1
    done
    return 0
}

__koopa_is_macos() { # {{{1
    # """
    # Is the operating system macOS?
    # @note Updated 2021-05-07.
    # """
    [[ "$(uname -s)" == 'Darwin' ]]
}

__koopa_print() { # {{{1
    # """
    # Print a string.
    # @note Updated 2021-05-07.
    # """
    local string
    [[ "$#" -gt 0 ]] || return 1
    for string in "$@"
    do
        printf '%b\n' "$string"
    done
    return 0
}

__koopa_realpath() { # {{{1
    # """
    # Resolve file path.
    # @note Updated 2021-05-20.
    # """
    local x
    x="$(readlink -f "$@")"
    [[ -n "$x" ]] || return 1
    __koopa_print "$x"
    return 0
}

__koopa_warn() { # {{{1
    # """
    # Print a warning message to the console.
    # @note Updated 2021-05-14.
    # """
    local string
    [[ "$#" -gt 0 ]] || return 1
    for string in "$@"
    do
        printf '%b\n' "$string" >&2
    done
    return 0
}

main() {
    # """
    # Main koopa CLI function.
    # @note Updated 2022-05-16.
    # """
    # Check for Bash 4+.
    case "${BASH_VERSION:-}" in
        '1.'* | '2.'* | '3.'*)
            __koopa_warn 'Bash 4+ is required.'
            return 1
            ;;
    esac
    local bash_source
    bash_source="${BASH_SOURCE[0]}"
    [[ -L "$bash_source" ]] && bash_source="$(__koopa_realpath "$bash_source")"
    [[ -x "$bash_source" ]] || return 1
    export KOOPA_ACTIVATE=0
    export KOOPA_HELP=0
    # shellcheck source=/dev/null
    source "$(dirname "$bash_source")/../lang/shell/bash/include/header.sh"
    koopa_cli "$@"
    return 0
}

main "$@"
