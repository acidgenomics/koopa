#!/usr/bin/env bash
set -Eeu -o pipefail

__koopa_is_installed() { # {{{1
    # """
    # Are all of the requested programs installed?
    # @note Updated 2021-05-07.
    # """
    local cmd
    for cmd in "$@"
    do
        command -v "$cmd" >/dev/null || return 1
    done
    return 0
}

__koopa_realpath() { # {{{1
    # """
    # Resolve file path.
    # @note Updated 2021-05-20.
    # """
    local platform readlink
    readlink='readlink'
    platform="$(uname -s)"
    case "$platform" in
        Darwin)
            readlink='greadlink'
            ;;
    esac
    if ! __koopa_is_installed "$readlink"
    then
        printf "Not installed: '%s'.\n" "$readlink" >&2
        case "$platform" in
            Darwin)
                printf 'Install Homebrew and GNU coreutils to resolve.\n' >&2
                ;;
        esac
        return 1
    fi
    "$readlink" -f "$@"
}

__koopa_source_bash_header() { # {{{1
    # """
    # Source the Koopa Bash header.
    # @note Updated 2021-05-20.
    # """
    local bash_source
    # Handle situation where 'koopa' is symlinked into '/usr/local'.
    bash_source="${BASH_SOURCE[0]}"
    if [[ -L "$bash_source" ]]
    then
        bash_source="$(__koopa_realpath "$bash_source")"
    fi
    [[ -x "$bash_source" ]] || return 1
    export KOOPA_ACTIVATE=0
    # shellcheck source=/dev/null
    . "$(dirname "$bash_source")/../lang/shell/bash/include/header.sh"
    return 0
}

__koopa_source_bash_header
koopa::koopa "$@"
