#!/usr/bin/env bash
set -Eeu -o pipefail

script_path="${BASH_SOURCE[0]}"
if [ -L "$script_path" ]
then
    koopa::realpath() {
        if [ "$(uname -s)" = "Darwin" ]
        then
            perl -MCwd -e 'print Cwd::abs_path shift' "$1"
        else
            readlink -f "$@"
        fi
    }
    script_path="$(koopa::realpath "$script_path")"
fi
script_dir="$(cd "$(dirname "$script_path")" &>/dev/null && pwd -P)"
# shellcheck source=/dev/null
checks=0 source "${script_dir}/../shell/bash/include/header.sh"
koopa::assert_has_args "$#"

# Update corresponding Bash completion file, if necessary.
case "$1" in
    # Auto-completion {{{1
    # ==========================================================================
    --version|-V)
        f="version"
        ;;
    info)
        f="system_info"
        ;;
    check-system | \
    header | \
    install-dotfiles | \
    list | \
    prefix | \
    test | \
    uninstall | \
    update | \
    version)
        f="$1"
        ;;
    # Supported, but hidden from user {{{1
    # ==========================================================================
    check)
        f="check_system"
        ;;
    log)
        f="view_latest_tmp_log_file"
        ;;
    pull)
        f="system_git_pull"
        ;;
    app-prefix | \
    cellar-prefix | \
    config-prefix | \
    get-homebrew-cask-version | \
    get-macos-app-version | \
    get-version | \
    host-id | \
    install-mike | \
    list-internal-functions | \
    make-prefix | \
    os-string | \
    set-permissions | \
    variable | \
    variables | \
    which-realpath)
        f="$1"
        ;;
    # Deprecated args / error catching {{{1
    # ==========================================================================
    help)
        koopa::defunct "koopa --help"
        ;;
    home)
        koopa::defunct "koopa prefix"
        ;;
    update-r-config)
        koopa::defunct "update-r-config (without 'koopa' prefix)"
        ;;
    r-home)
        koopa::defunct "koopa which-realpath R"
        ;;
    upgrade)
        koopa::defunct "koopa update"
        ;;
    *)
        koopa::invalid_arg "$1"
        ;;
esac

fun="koopa::${f//-/_}"
koopa::assert_is_function "$fun"
shift 1
"$fun" "$@"
