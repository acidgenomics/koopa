#!/usr/bin/env bash

KOOPA_HOME="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." \
    >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${KOOPA_HOME}/shell/bash/include/header.sh"



# Variables                                                                 {{{1
# ==============================================================================

prefix="sample"
padwidth=2



# Usage                                                                     {{{1
# ==============================================================================

usage() {
cat << EOF
$(_koopa_help_header)
    [--prefix="$prefix"] [--padwidth=$padwidth]
    files...

Autopad sample file names that begin with a number.

required positional arguments:
    ... File names.

required arguments, with defaults:
    --prefix
        Prefix name.
        Defaults to '${prefix}'.
    --padwidth
        Zero padding width.
        Defaults to '${padwidth}'.
        Manually adjust this when working with >= 100 samples.
        Auto-width detection may be added in a future release but isn't
        currently supported.

$(_koopa_help_args)

details:
    Intended for quick sanitization of FASTQ files from a sequencing vendor that
    begin with numbers and aren't zero padded.

    Autopadding file names with leading zeros helps avoided unexpected
    downstream sorting issues due to differences in how shell environments and
    programming languages handle natural sorting.

    Here we are also renaming with a character string prefix by default, to
    avoid valid name issues in R. See 'make.names()' for details.

examples:
    autopad-samples *.fastq.gz

    input:
    1-dmso-A-R1.fastq.qz
    1-dmso-A-R2.fastq.gz
    2-dmso-B-R1.fastq.gz
    2-dmso-B-R2.fastq.gz
    ...
    10-compound-A-R1.fastq.gz
    10-compound-A-R2.fastq.gz

    output:
    sample-01-dmso-A-R1.fastq.qz
    sample-01-dmso-A-R2.fastq.gz
    sample-02-dmso-B-R1.fastq.gz
    sample-02-dmso-B-R2.fastq.gz
    ...
    sample-10-compound-A-R1.fastq.gz
    sample-10-compound-A-R2.fastq.gz

note:
    Bash script.
    Updated 2019-09-20.
EOF
}

[[ -z "$*" ]] && usage && exit 0
_koopa_help "$@"



# Arguments                                                                 {{{1
# ==============================================================================

POSITIONAL=()
while (("$#"))
do
    case "$1" in
        --padwidth=*)
            padwidth="${1#*=}"
            shift 1
            ;;
        --padwidth)
            padwidth="$2"
            shift 2
            ;;
        --prefix=*)
            prefix="${1#*=}"
            shift 1
            ;;
        --prefix)
            prefix="$2"
            shift 2
            ;;
        --)
            shift 1
            break
            ;;
        --*|-*)
            _koopa_invalid_arg "$1"
            ;;
        *)
            POSITIONAL+=("$1")
            shift 1
            ;;
    esac
done
set -- "${POSITIONAL[@]}"
files=("$@")



# Script                                                                    {{{1
# ==============================================================================

for file in "${files[@]}"
do
    if [[ "$file" =~ ^([0-9]+)(.*)$ ]]
    then
        oldname="${BASH_REMATCH[0]}"
        num=${BASH_REMATCH[1]}
        # Now pad the number prefix.
        num=$(printf "%.${padwidth}d" "$num")
        stem=${BASH_REMATCH[2]}
        # Combine with prefix to create desired file name.
        newname="${prefix}_${num}${stem}"
        mv -nv "$oldname" "$newname"
    else
        printf "Skipping %s.\n" "$file"
    fi
done
