#!/usr/bin/env bash

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../shell/bash/include/header.sh"

koopa::autopad_samples() {
    # """
    # Autopad samples.
    # @note Updated 2020-07-08.
    # """
    local files newname num padwidth oldname pos prefix stem
    koopa::assert_has_args "$#"
    prefix='sample'
    padwidth=2
    pos=()
    while (("$#"))
    do
        case "$1" in
            --padwidth=*)
                padwidth="${1#*=}"
                shift 1
                ;;
            --padwidth)
                padwidth="$2"
                shift 2
                ;;
            --prefix=*)
                prefix="${1#*=}"
                shift 1
                ;;
            --prefix)
                prefix="$2"
                shift 2
                ;;
            --)
                shift 1
                break
                ;;
            --*|-*)
                koopa::invalid_arg "$1"
                ;;
            *)
                pos+=("$1")
                shift 1
                ;;
        esac
    done
    [[ "${#pos[@]}" -gt 0 ]] && set -- "${pos[@]}"
    files=("$@")
    if ! koopa::is_array_non_empty "${files[@]}"
    then
        koopa::stop 'No files.'
    fi
    for file in "${files[@]}"
    do
        if [[ "$file" =~ ^([0-9]+)(.*)$ ]]
        then
            oldname="${BASH_REMATCH[0]}"
            num=${BASH_REMATCH[1]}
            # Now pad the number prefix.
            num=$(printf "%.${padwidth}d" "$num")
            stem=${BASH_REMATCH[2]}
            # Combine with prefix to create desired file name.
            newname="${prefix}_${num}${stem}"
            koopa::mv "$oldname" "$newname"
        else
            koopa::note "Skipping '${file}'."
        fi
    done
    return 0
}

koopa::autopad_samples "$@"
