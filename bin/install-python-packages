#!/usr/bin/env bash
set -Eeu -o pipefail

KOOPA_PREFIX="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." \
    >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${KOOPA_PREFIX}/shell/bash/include/header.sh"

_koopa_assert_has_no_envs
_koopa_assert_is_installed pip3 pipx python3

# pip                                                                     # {{{1
# ==============================================================================

_koopa_h1 "Installing pip packages."
_koopa_dl "Site library" "$(_koopa_python_site_packages_prefix)"

pkgs=(
    logbook
    numpy
    pandas
)

for pkg in "${pkgs[@]}"
do
    _koopa_h2 "Installing '${pkg}'."
    python3 -m pip install \
        --no-warn-script-location \
        "$pkg"
done

_koopa_link_cellar python

# pipx                                                                    # {{{1
# ==============================================================================

_koopa_h1 "Installing pipx virtual environments."
_koopa_dl "PIPX_HOME" "$PIPX_HOME"
_koopa_dl "PIPX_BIN_DIR" "$PIPX_BIN_DIR"

mkdir -pv "$PIPX_BIN_DIR"
_koopa_add_to_path_start "$PIPX_BIN_DIR"

envs=(
    black
    flake8
    pyflakes
    pylint
    pytest
)

_koopa_dl "Environments" "$(_koopa_to_string "${envs[@]}")"

for env in "${envs[@]}"
do
    _koopa_h2 "Installing '${env}'."
    (
        set -o xtrace
        rm -frv "${PIPX_HOME}/venvs/${env}"
        pipx install --force "$env"
    ) &> "$(_koopa_tmp_log_file)"
done

_koopa_set_permissions "$PIPX_HOME"

_koopa_success "pipx environments installed successfully."
_koopa_note "Restart the shell to ensure programs are available in PATH."
