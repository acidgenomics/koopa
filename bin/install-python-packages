#!/usr/bin/env bash

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../shell/bash/include/header.sh"

koopa::install_python_packages() {
    # """
    # Install Python packages.
    # @note Updated 2020-07-10.
    # These are used internally by koopa.
    # """
    local install_flags name_fancy pkgs pos python
    python="$(koopa::python)"
    reinstall=0
    pos=()
    while (("$#"))
    do
        case "$1" in
            --reinstall)
                reinstall=1
                shift 1
                ;;
            --)
                shift 1
                break
                ;;
            --*|-*)
                koopa::invalid_arg "$1"
                ;;
            *)
                pos+=("$1")
                shift 1
                ;;
        esac
    done
    [[ "${#pos[@]}" -gt 0 ]] && set -- "${pos[@]}"
    koopa::assert_has_no_envs
    koopa::assert_is_installed "$python"
    pkgs=("$@")
    if [[ "${#pkgs[@]}" -eq 0 ]]
    then
        pkgs=(
            'setuptools'
            'wheel'
            'black==19.10b0'
            'flake8==3.8.3'
            'logbook==1.5.3'
            'pipx==0.15.4.0'
            'pyflakes==2.2.0'
            'pylint==2.5.3'
            'pytest==5.4.3'
            'six==1.15.0'
        )
    fi
    name_fancy='Python packages'
    koopa::install_start "$name_fancy"
    koopa::dl 'Site library' "$(koopa::python_site_packages_prefix)"
    install_flags=()
    [[ "$reinstall" -eq 1 ]] && install_flags+=('--reinstall')
    koopa::install_pip "${install_flags[@]}"
    koopa::pip_install "${install_flags[@]}" "${pkgs[@]}"
    koopa::is_cellar "$python" && koopa::link_cellar python
    koopa::install_success "$name_fancy"
    return 0
}

koopa::install_python_packages "$@"
