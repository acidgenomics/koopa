#!/usr/bin/env python3
"""Download FlyBase genome annotations in FASTA format.
"""

import argparse
import os
import subprocess
import sys

parser = argparse.ArgumentParser()
optional = parser._action_groups.pop()
required = parser.add_argument_group('required arguments')
required.add_argument( \
    "--type", required=True, \
    help="\"dna\" (genome) or \"cdna\" (transcriptome)" \
)
optional.add_argument( \
    "--version", \
    help="release version (e.g. \"6.28\")" \
)
optional.add_argument( \
    "--date", \
    help="release date (e.g. \"2019-03\")" \
)
args = parser.parse_args()
type = args.type

version = args.version
if version is None:
    version = subprocess.check_output( \
        "_koopa_variable flybase_release_version", \
        shell=True, universal_newlines=True \
    )
    version = version.rstrip()
version = "r" + version

date = subprocess.check_output( \
    "_koopa_variable flybase_release_date", \
    shell=True, universal_newlines=True \
)
date = date.rstrip()
date = "FB" + date.replace("-", "_")

base_url = "ftp://ftp.flybase.net/releases/" + \
    date + "/dmel_" + version + "/fasta"

if type == "dna":
    file = "dmel-all-aligned-" + version + ".fasta.gz"
elif type == "cdna":
    # Concatenate into single FASTA.
    file = "dmel-transcriptome-" + version + ".fasta.gz"

# Error if the file exists.
if os.path.isfile(file):
    print(file + " has already been downloaded.")
    sys.exit(0)

if type == "dna":
    url = base_url + "/" + file
    print("Downloading " + file + ".")
    try:
        subprocess.check_call(["wget", url])
    except subprocess.CalledProcessError as e:
        print("Failed to download " + file + ".")
        sys.exit(1)
    # Decompress, but also keep the original compressed file.
    print("Decompressing " + file + ".")
    unzip_file = os.path.splitext(file)[0]
    os.system("gunzip -c " + file + " > " + unzip_file)
elif type == "cdna":
    print("Downloading FlyBase FASTA files.")
    try:
        subprocess.check_call([ \
            "wget", \
            base_url + "/dmel-all-transcript-" + version + ".fasta.gz" \
        ])
        subprocess.check_call([ \
            "wget", \
            base_url + "/dmel-all-miRNA-" + version + ".fasta.gz" \
        ])
        subprocess.check_call([ \
            "wget", \
            base_url + "/dmel-all-miscRNA-" + version + ".fasta.gz" \
        ])
        subprocess.check_call([ \
            "wget", \
            base_url + "/dmel-all-ncRNA-" + version + ".fasta.gz" \
        ])
        subprocess.check_call([ \
            "wget", \
            base_url + "/dmel-all-pseudogene-" + version + ".fasta.gz" \
        ])
        subprocess.check_call([ \
            "wget", \
            base_url + "/dmel-all-tRNA-" + version + ".fasta.gz" \
        ])
    except subprocess.CalledProcessError as e:
        print(e)
        sys.exit(1)
    print("Concatenating " + file + ".")
    os.system("cat dmel-all-*-" + version + ".fasta.gz > " + file)
