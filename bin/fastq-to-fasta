#!/usr/bin/env bash
set -Eeu -o pipefail

KOOPA_PREFIX="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." \
    >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${KOOPA_PREFIX}/shell/bash/include/header.sh"

_koopa_assert_has_args "$@"

# Alternate approaches:
#
# > seqtk seq -A
#
# > bioawk -c fastx '{print ">" $name; print $seq}' "$fastq_file"
#
# > cat "$fastq_file" | \
# >     paste - - - - | \
# >     awk -v FS="\t" '{print $1"\n"$2}' > \
# >     "$fasta_file"

source_dir="."
target_dir="."

while (("$#"))
do
    case "$1" in
        --source-dir=*)
            source_dir="${1#*=}"
            shift 1
            ;;
        --source-dir)
            source_dir="$2"
            shift 2
            ;;
        --target-dir=*)
            target_dir="${1#*=}"
            shift 1
            ;;
        --target-dir)
            target_dir="$2"
            shift 2
            ;;
        *)
            _koopa_invalid_arg "$1"
            ;;
    esac
done

source_dir="$(_koopa_strip_trailing_slash "$source_dir")"
target_dir="$(_koopa_strip_trailing_slash "$target_dir")"

# Put unique samples into an array and loop.
array=()
while IFS= read -r -d $'\0'
do
    array+=("$REPLY")
done < <(find "$source_dir" -maxdepth 1 -name "*.fastq" -print0)

# Error if file array is empty.
if [[ "${#array[@]}" -eq 0 ]]
then
    _koopa_stop "No FASTQ files detected."
fi

# Create the target directory automatically.
mkdir -pv "$target_dir"

for fastq_file in "${array[@]}"
do
    fasta_file="${fastq_file//fastq/fasta}"
    paste - - - - < "$fastq_file" \
        | cut -f 1,2 \
        | sed 's/^@/>/' \
        | tr "\t" "\n" > "$fasta_file"
done
