#!/usr/bin/env bash
set -Eeu -o pipefail

KOOPA_PREFIX="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." \
    >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${KOOPA_PREFIX}/shell/bash/include/header.sh"

# """
# Update all pip packages.
#
# See also:
# - https://github.com/pypa/pip/issues/59
# - https://stackoverflow.com/questions/2720014
# """

_koopa_exit_if_not_installed pip3 python3
_koopa_assert_has_no_args "$@"
_koopa_assert_has_no_envs

_koopa_h1 "Updating Python packages."

x="$(python3 -m pip list --outdated --format=freeze)"
x="$(echo "$x" | grep -v '^\-e')"

if [[ -z "$x" ]]
then
    _koopa_success "All Python packages are current."
    exit 0
fi

prefix="$(_koopa_python_site_packages_prefix)"

mapfile -t pkgs < <(echo "$x" | cut -d '=' -f 1)
_koopa_dl "Packages" "$(_koopa_to_string "${pkgs[@]}")"
_koopa_dl "Prefix" "$prefix"

python3 -m pip install \
    --no-warn-script-location \
    --upgrade \
    "${pkgs[@]}"

# Remove '__pycache__' directories, which can create permission issues when
# attempting to rsync installation across machines.
_koopa_h2 "Removing '__pycache__' directories."
find "$prefix" \
    -type d \
    -name "__pycache__" \
    -print0 \
    | xargs -0 -I {} rm -fr {}

if _koopa_is_cellar python3
then
    _koopa_link_cellar python
fi

_koopa_success "Update of Python packages was successful."
