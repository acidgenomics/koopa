#!/usr/bin/env bash
set -Eeu -o pipefail

# shellcheck source=/dev/null
source "$(koopa header bash)"

# Run kallisto.
# Updated 2019-09-04.



# > conda activate kallisto
_koopa_assert_is_installed kallisto
kallisto version
# kallisto, version 0.46.0



# Regarding bash arrays:
# - https://unix.stackexchange.com/questions/263883
# - https://github.com/koalaman/shellcheck/wiki/SC2206
# - http://mywiki.wooledge.org/ParsingLs
# - https://stackoverflow.com/questions/1951506

# Array sorting:
# - https://stackoverflow.com/questions/7442417
# - https://stackoverflow.com/a/7442583/3911732



# Variables                                                                 {{{1
# ==============================================================================

fastq_dir="fastq"

quant_dir="kallisto"
mkdir -pv "$quant_dir"

index_file="kallisto.idx"
index_file="${quant_dir}/${index_file}"

fasta_file="Homo_sapiens.GRCh38.cdna.all.fa.gz"
# > gtf_file="Homo_sapiens.GRCh38.97.gtf.gz"

# Use n-2 threads.
threads="$((CPU_COUNT-2))"

# Note that bcbio uses 30 bootstrap samples.
# Uma's nextflow script currently uses 100.
bootstraps=30

r1_tail="_R1_001.fastq.gz"
r2_tail="_R2_001.fastq.gz"



# kallisto index                                                            {{{1
# ==============================================================================

# Generate the kallisto index.
if [[ ! -f "$index_file" ]]
then
    kallisto index -i "$index_file" "$fasta_file"
fi



# kallisto quant                                                            {{{1
# ==============================================================================

# Create a per-sample array from the R1 FASTQ files.
array=()
for x in "${fastq_dir}/"*"${r1_tail}"
do
    x="$(basename "$x")"
    x="${x/${r1_tail}/}"
    array+=("$x")
done

# Loop across the per-sample array and run kallisto.
for x in "${array[@]}"
do
    printf "kallisto quant: %s\n" "$x"
    output_dir="${quant_dir}/${x}"
    rm -frv "$output_dir"
    mkdir -pv "$output_dir"
    fastq_r1="${fastq_dir}/${x}${r1_tail}"
    fastq_r2="${fastq_dir}/${x}${r2_tail}"
    kallisto quant \
        --output-dir="$output_dir" \
        --index="$index_file" \
        --threads="$threads" \
        --bootstrap-samples="$bootstraps" \
        "$fastq_r1" "$fastq_r2"
done
