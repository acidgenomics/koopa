#!/usr/bin/env bash
set -Eeu -o pipefail

# shellcheck source=/dev/null
source "$(koopa header bash)"



# Usage                                                                     {{{1
# ==============================================================================

usage() {
cat << EOF
usage fastq-dump-from-sra-file-list [--help|-h] [FILELIST]

FASTQ dump from Sequence Read Archive (SRA) accession list.

optional positional arguments:
    1.  SRA access file list.
        By default, looks for 'SRR_Acc_List.txt' file.

details:
    Requires sratools to be installed, which contains fastq-dump.

    This script loops across an SRA accession file list and calls 
    'fastq-dump --split-files' internally.

    Note that this will skip FASTQ files that have already been extracted.
    This is useful because fastq-dump can take a long time and get interrupted.

see also:
    Look into using fasterq-dump instead of fastq-dump.
    Consider using '--split-3' flag by default instead?

    10X Genomics single-cell RNA-seq data format.
    https://kb.10xgenomics.com/hc/en-us/articles/115003802691

note:
    Bash script.
    Updated 2019-09-20.
EOF
}

_koopa_help "$@"



# Arguments                                                                 {{{1
# ==============================================================================

filelist="${1:-SRR_Acc_List.txt}"



# Script                                                                    {{{1
# ==============================================================================

_koopa_assert_is_installed fastq-dump
_koopa_assert_is_file "$filelist"

# SC2162: read without -r will mangle backslashes.
while read -r id
do
    if [[ ! -f "${id}.fastq.gz" ]] && [[ ! -f "${id}_1.fastq.gz" ]]
    then
        printf "SRA Accession ID: %s.\n" "$id"
        fastq-dump --gzip --split-files "${id}"
    fi
done < "$filelist"
