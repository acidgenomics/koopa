#!/usr/bin/env python3
"""Download FlyBase genome annotations in GTF format.
"""

import argparse
import os
import subprocess
import sys

parser = argparse.ArgumentParser()
optional = parser._action_groups.pop()
optional.add_argument( \
    "--version", \
    help="release version (e.g. \"6.28\")" \
)
optional.add_argument( \
    "--date", \
    help="release date (e.g. \"2019-03\")" \
)
args = parser.parse_args()

version = args.version
if version is None:
    version = subprocess.check_output( \
        "koopa variable flybase_release_version", \
        shell=True, universal_newlines=True \
    )
    version = version.rstrip()
version = "r" + version

date = subprocess.check_output( \
    "koopa variable flybase_release_date", \
    shell=True, universal_newlines=True \
)
date = date.rstrip()
date = "FB" + date.replace("-", "_")

url = "ftp://ftp.flybase.net/releases/" + date + "/" + \
    "dmel_" + version + "/gtf/dmel-all-" + version + ".gtf.gz"
file = os.path.basename(url)

## Error if the file exists.
if os.path.isfile(file):
    print(file + " has already been downloaded.")
    sys.exit(0)

print("Downloading " + file + ".")
try:
    subprocess.check_call(["wget", url])
except subprocess.CalledProcessError as e:
    print("Failed to download " + file + ".")
    sys.exit(1)

## Decompress, but also keep the original compressed file.
print("Decompressing " + file + ".")
unzip_file = os.path.splitext(file)[0]
os.system("gunzip -c " + file + " > " + unzip_file)
