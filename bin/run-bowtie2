#!/usr/bin/env bash
set -Eeu -o pipefail

KOOPA_PREFIX="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." \
    >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${KOOPA_PREFIX}/shell/bash/include/header.sh"

fastq_dir="fastq"
index_dir="bowtie2-index"
output_dir="bowtie2"
r1_tail="_R1_001.fastq.gz"
r2_tail="_R2_001.fastq.gz"

while (("$#"))
do
    case "$1" in
        --fastq-dir=*)
            fastq_dir="${1#*=}"
            shift 1
            ;;
        --fastq-dir)
            fastq_dir="$2"
            shift 2
            ;;
        --index-dir=*)
            index_dir="${1#*=}"
            shift 1
            ;;
        --index-dir)
            index_dir="$2"
            shift 2
            ;;
        --output-dir=*)
            output_dir="${1#*=}"
            shift 1
            ;;
        --output-dir)
            output_dir="$2"
            shift 2
            ;;
        --r1-tail=*)
            r1_tail="${1#*=}"
            shift 1
            ;;
        --r1-tail)
            r1_tail="$2"
            shift 2
            ;;
        --r2-tail=*)
            r2_tail="${1#*=}"
            shift 1
            ;;
        --r2-tail)
            r2_tail="$2"
            shift 2
            ;;
        *)
            _koopa_invalid_arg "$1"
            ;;
    esac
done

fastq_dir="$(_koopa_strip_trailing_slash "$fastq_dir")"
index_dir="$(_koopa_strip_trailing_slash "$index_dir")"
output_dir="$(_koopa_strip_trailing_slash "$output_dir")"

_koopa_h1 "Running bowtie2."

_koopa_activate_conda_env bowtie2
_koopa_dl "bowtie2" "$(_koopa_which_realpath bowtie2)"

fastq_dir="$(realpath "$fastq_dir")"
index_dir="$(realpath "$index_dir")"

_koopa_dl "fastq dir" "$fastq_dir"
_koopa_dl "index dir" "$index_dir"

# Sample array from FASTQ files                                             {{{1
# ==============================================================================

# Create a per-sample array from the R1 FASTQ files.
# Pipe GNU find into array.
fastq_r1_files=()
while IFS= read -r -d $'\0'
do
    fastq_r1_files+=("$REPLY")
done < <( \
    find "$fastq_dir" \
        -maxdepth 1 \
        -mindepth 1 \
        -type f \
        -name "*${r1_tail}" \
        -print0 \
    | sort -z \
)

# Error on FASTQ match failure.
if [[ "${#fastq_r1_files[@]}" -eq 0 ]]
then
    _koopa_stop "Failed to match FASTQs in '${fastq_dir}' with '${r1_tail}'."
fi

_koopa_info "${#fastq_r1_files[@]} samples detected."

# Alignment                                                                 {{{1
# ==============================================================================

# Loop across the per-sample array and align.
for fastq_r1 in "${fastq_r1_files[@]}"
do
    fastq_r2="${fastq_r1/${r1_tail}/${r2_tail}}"
    index_prefix="${index_dir}/bowtie2"
    _koopa_bowtie2 \
        --fastq-r1="$fastq_r1" \
        --fastq-r2="$fastq_r2" \
        --index-prefix="$index_prefix" \
        --output-dir="$output_dir" \
        --r1-tail="$r1_tail" \
        --r2-tail="$r2_tail"
done
