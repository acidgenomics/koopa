#!/usr/bin/env bash

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../shell/bash/include/header.sh"

koopa::run_bowtie2() {
    local fastq_dir fastq_r1_files output_dir r1_tail r2_tail
    fastq_dir='fastq'
    output_dir='bowtie2'
    r1_tail='_R1_001.fastq.gz'
    r2_tail='_R2_001.fastq.gz'
    while (("$#"))
    do
        case "$1" in
            --fasta-file=*)
                fasta_file="${1#*=}"
                shift 1
                ;;
            --fasta-file)
                fasta_file="$2"
                shift 2
                ;;
            --fastq-dir=*)
                fastq_dir="${1#*=}"
                shift 1
                ;;
            --fastq-dir)
                fastq_dir="$2"
                shift 2
                ;;
            --index-dir=*)
                index_dir="${1#*=}"
                shift 1
                ;;
            --index-dir)
                index_dir="$2"
                shift 2
                ;;
            --output-dir=*)
                output_dir="${1#*=}"
                shift 1
                ;;
            --output-dir)
                output_dir="$2"
                shift 2
                ;;
            --r1-tail=*)
                r1_tail="${1#*=}"
                shift 1
                ;;
            --r1-tail)
                r1_tail="$2"
                shift 2
                ;;
            --r2-tail=*)
                r2_tail="${1#*=}"
                shift 1
                ;;
            --r2-tail)
                r2_tail="$2"
                shift 2
                ;;
            *)
                koopa::invalid_arg "$1"
                ;;
        esac
    done
    if [[ -z "${fasta_file:-}" ]] && [[ -z "${index_dir:-}" ]]
    then
        koopa::stop 'Specify "fasta-file" or "index-dir".'
    elif [[ -n "${fasta_file:-}" ]] && [[ -n "${index_dir:-}" ]]
    then
        koopa::stop 'Specify "fasta-file" or "index-dir", but not both.'
    elif [[ -z "${fastq_dir:-}" ]] || [[ -z "${output_dir:-}" ]]
    then
        koopa::missing_arg
    fi
    fastq_dir="$(koopa::strip_trailing_slash "$fastq_dir")"
    output_dir="$(koopa::strip_trailing_slash "$output_dir")"
    koopa::h1 'Running bowtie2.'
    koopa::activate_conda_env bowtie2
    koopa::dl 'bowtie2' "$(koopa::which_realpath bowtie2)"
    fastq_dir="$(realpath "$fastq_dir")"
    koopa::dl 'fastq dir' "$fastq_dir"

    # Sample array from FASTQ files {{{1
    # ==========================================================================

    # Create a per-sample array from the R1 FASTQ files.
    # Pipe GNU find into array.
    readarray -t fastq_r1_files <<< "$( \
        find "$fastq_dir" \
            -maxdepth 1 \
            -mindepth 1 \
            -type f \
            -name "*${r1_tail}" \
            -print \
        | sort \
    )"
    # Error on FASTQ match failure.
    if [[ "${#fastq_r1_files[@]}" -eq 0 ]]
    then
        koopa::stop "No FASTQs in \"${fastq_dir}\" with \"${r1_tail}\"."
    fi
    koopa::info "${#fastq_r1_files[@]} samples detected."

    # Index {{{1
    # ==========================================================================

    # Generate the genome index on the fly, if necessary.
    if [[ -n "${index_dir:-}" ]]
    then
        index_dir="$(realpath "$index_dir")"
    else
        index_dir="${output_dir}/bowtie2.idx"
        koopa::bowtie2_index \
            --fasta-file="$fasta_file" \
            --index-dir="$index_dir"
    fi
    koopa::dl 'index' "$index_dir"

    # Alignment {{{1
    # ==========================================================================

    # Loop across the per-sample array and align.
    for fastq_r1 in "${fastq_r1_files[@]}"
    do
        fastq_r2="${fastq_r1/${r1_tail}/${r2_tail}}"
        index_prefix="${index_dir}/bowtie2"
        koopa::bowtie2 \
            --fastq-r1="$fastq_r1" \
            --fastq-r2="$fastq_r2" \
            --index-prefix="$index_prefix" \
            --output-dir="$output_dir" \
            --r1-tail="$r1_tail" \
            --r2-tail="$r2_tail"
    done
    return 0
}

koopa::run_bowtie2 "$@"
