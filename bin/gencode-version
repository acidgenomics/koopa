#!/usr/bin/env bash

KOOPA_HOME="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." \
    >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${KOOPA_HOME}/shell/bash/include/header.sh"



# Variables                                                                 {{{1
# ==============================================================================

base_url="https://www.gencodegenes.org"



# Usage                                                                     {{{1
# ==============================================================================

usage() {
cat << EOF
$(_koopa_help_header)
    organism

GENCODE release version.

$(_koopa_help_args)

required positional arguments:
    1.  Organism name. Use full Latin, case sensitive.
        "Homo sapiens" or "Mus musculus" are supported.

details:
    Extract the GENCODE release version from the website.

    Note that the FTP server can list releases that are in development ahead of
    the public release listed on the website, so scrape the HTML instead.

see also:
    ${base_url}

note:
    Bash script.
    Updated 2019-10-23.
EOF
}

_koopa_assert_has_args "$@"
_koopa_help "$@"



# Arguments                                                                 {{{1
# ==============================================================================

organism="$1"



# Script                                                                    {{{1
# ==============================================================================

case "$organism" in
    "Homo sapiens")
        short_name="human"
        pattern="Release [0-9]+"
        ;;
    "Mus musculus")
        short_name="mouse"
        pattern="Release M[0-9]+"
        ;;
    *)
        _koopa_stop "Unsupported organism: '${organism}'."
        ;;
esac

url="${base_url}/${short_name}/"
wget -q -O - "$url"                                                            \
    | grep -Eo "$pattern"                                                      \
    | head -n 1                                                                \
    | cut -d ' ' -f 2
