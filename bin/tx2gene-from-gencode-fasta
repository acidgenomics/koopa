#!/usr/bin/env bash

KOOPA_HOME="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." \
    >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${KOOPA_HOME}/shell/bash/include/header.sh"



# Variables                                                                 {{{1
# ==============================================================================

output_file="tx2gene.csv"



# Usage                                                                     {{{1
# ==============================================================================

usage() {
cat << EOF
$(_koopa_help_header)
    fasta_file [output_file="${output_file}"]

Generate transcript-to-gene mappings from GENCODE FASTA.

required positional arguments:
    1.  Transcriptome FASTA file.
        Assuming input FASTA is gzip compressed.

optional positional arguments with defaults:
    2.  Output CSV file.
        Defaults to '${output_file}'.

$(_koopa_help_args)

details:
    Generates a CSV mapping file from the reference transcriptome input,
        suitable for use with 'tximport()' in R.
    Output does not contain column names.
    Transcript and gene identifier versions are maintained.

    Column 1: transcripts
    Column 2: genes

    Internal processing steps:
    1. Decompress FASTA and pipe to stdout.
    2. Keep only headers prefixed with '>'.
    3. Keep only transcript (1) and gene (2) identifier columns.
    4. Remove duplicate lines.
    5. Trim header prefix '>'.
    6. Convert '|' delim to ',' for CSV output.
    7. Write to '${output_file}'.

note:
    Bash script.
    Updated 2019-10-09.
EOF
}

[[ -z "$*" ]] && usage && exit 0
_koopa_help "$@"



# Arguments                                                                 {{{1
# ==============================================================================

fasta_file="$1"
output_file="${2:-$output_file}"



# Script                                                                    {{{1
# ==============================================================================

printf "Generating '%s' from '%s'.\n" \
    "$(basename "$output_file")" \
    "$(basename "$fasta_file")"

_koopa_assert_is_not_file "$output_file"
_koopa_assert_matches_pattern "$fasta_file" ".transcripts.fa.gz"

gunzip -c "$fasta_file" | \
    grep '>' | \
    cut -d '|' -f1,2 | \
    awk '!a[$0]++' | \
    tr -d '>' | \
    sed 's/|/,/g' > \
    "$output_file"

# Return the number of transcripts.
count="$(_koopa_line_count "$output_file")"
printf "%d transcripts detected.\n" "$count"
