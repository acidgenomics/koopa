#!/usr/bin/env bash

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../include/header.sh"



# Notes                                                                     {{{1
# ==============================================================================

# Useful rsync flags:
# -n, --dry-run               perform a trial run with no changes made
# -r, --recursive
#
# -v, --verbose
# -h, --human-readable        output numbers in a human-readable format
#     --progress              show progress during transfer
#     --stats                 give some file-transfer stats
#
# -L, --copy-links            transform symlink into referent file/dir
#     --safe-links            ignore symlinks that point outside the tree
#     --munge-links
# -k, --copy-dirlinks         transform symlink to dir into referent dir
# -K, --keep-dirlinks         treat symlinked dir on receiver as dir
#
#     --delete                delete extraneous files from dest dirs
#     --preallocate           allocate dest files before writing
#     --size-only             skip files that match in size
#
# Incompatible with Azure file shares mounted over Samba (SMB):
# -a, --archive               archive mode; equals -rlptgoD (no -H,-A,-X)
# -p, --perms                 preserve permissions
# -l, --links                 copy links as symlinks
# -H, --hard-links            preserve hard links
#
# --super                 receiver attempts super-user activities
# --fake-super            store/recover privileged attrs using xattrs



# Variables                                                                 {{{1
# ==============================================================================

# "--exclude=bam"
# "--exclude=cram"
# "--exclude=fastq"
# "--exclude=sam"

flags=(
    "--exclude=.Rproj.user"
    "--exclude=.git"
    "--exclude=.gitignore"
    "--exclude=work"
    "--human-readable"
    "--no-links"
    "--progress"
    "--recursive"
    "--size-only"
    "--stats"
    "--verbose"
)



# Usage                                                                     {{{1
# ==============================================================================

usage() {
cat << EOF
$(_koopa_help_header) ...

rsync to Azure Samba (SMB) file shares.

required positional arguments:
    ... Passes to rsync, with some flags set internally.

$(_koopa_help_args)

rsync flags set automatically:
EOF
printf "    %s\n" "${flags[@]}"
cat << EOF

examples:
    rsync-azure-files results/ /mnt/azbioinfo01/project/results/

note:
    Bash script.
    Updated 2019-09-25.
EOF
}

_koopa_help "$@"



# Script                                                                    {{{1
# ==============================================================================

if _koopa_has_sudo
then
    sudo rsync "${flags[@]}" "$@"
else
    rsync "${flags[@]}" "$@"
fi
