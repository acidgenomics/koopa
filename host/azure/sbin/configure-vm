#!/usr/bin/env bash
set -Eeu -o pipefail

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../include/header.sh"

_koopa_assert_has_no_envs

cpi="false"
source="false"

while (("$#"))
do
    case "$1" in
        --cpi=*)
            cpi="${1#*=}"
            shift 1
            ;;
        --cpi)
            cpi="true"
            shift 1
            ;;
        --source=*)
            source="${1#*=}"
            shift 1
            ;;
        --source)
            source="true"
            shift 1
            ;;
        *)
            _koopa_invalid_arg "$1"
            ;;
    esac
done

data_disk="/data00"

_koopa_enable_passwordless_sudo
_koopa_prepare_make_prefix

# Remove default user shell configuration files.
sudo rm -fv /etc/skel/.{bash_logout,bash_profile,bashrc,emacs,zshrc}

# Prepare '/n/' share.
sudo mkdir -pv "${data_disk}/n/app"
sudo ln -fnsv "${data_disk}/n" /n

install-rhel-7-base

if [[ "$cpi" == "true" ]]
then
    _koopa_message "Updating '/etc/profile.d'."
    _koopa_update_profile
    sudo ln -fnsv \
        "$(_koopa_prefix)/host/azure/etc/profile.d/constellation.sh" \
        "/etc/profile.d/."

    _koopa_message "Updating '/etc/cron.d'."
    sudo rm -fv "/etc/cron.d/cpi-"*
    sudo rm -fv "/etc/cron.d/constellation"
    sudo cp -v \
        "$(_koopa_prefix)/host/azure/etc/cron.d/constellation" \
        "/etc/cron.d/constellation"

    # Ensure that shared bioinfo user has correct dotfiles.
    if [[ -d "$(_koopa_prefix)/dotfiles" ]]
    then
        _koopa_message "Updating bioinfo user dotfiles."
        sudo -u bioinfo -H "$SHELL" -c "\
            rm -fv ~/.bash_logout; \
            rm -fv ~/.bash_profile; \
            rm -fv ~/.bashrc; \
            rm -fv ~/.condarc; \
            /usr/local/koopa/bin/link-dotfile --force \
                app/emacs/minimal/emacs.el emacs \
        "
    fi

    _koopa_message "Updating '/data00' structure."
    sudo rm -frv "/data00/"{R,bcbio,cellranger,cellranger-atac,conda,docker,var}

    if _koopa_is_matching_fixed "$HOSTNAME" azlabapp32
    then
        install-rstudio-server-pro
    fi

    rsync-vm --data-disk="/data00" --source-ip="10.100.100.132"
fi

install-azure-cli
install-openjdk

if [[ "$source" == "true" ]]
then
    # /usr/local/cellar
    install-cellar-coreutils
    install-cellar-bash
    install-cellar-zsh
    install-cellar-fish
    install-cellar-tmux
    install-cellar-git
    install-cellar-gnupg
    install-cellar-lua
    install-cellar-luarocks
    install-cellar-r
    install-cellar-python
    install-cellar-vim
    install-cellar-neovim
    install-cellar-emacs
    install-cellar-sqlite
    install-cellar-proj
    install-cellar-gdal
    install-cellar-hdf5
    install-cellar-go
    install-cellar-gsl
    install-cellar-perl
    install-cellar-ruby
    install-cellar-julia
    install-cellar-htop
    install-cellar-shellcheck
    install-cellar-neofetch
    install-cellar-genrich
    install-cellar-autojump
    install-cellar-fzf
    install-cellar-the-silver-searcher
    # /n/app
    install-rust
    install-perlbrew
    install-rbenv
    install-pyenv
    install-rstudio-server-pro
    r-javareconf
fi

if ! _koopa_is_installed rstudio-server
then
    install-rstudio-server
fi

if ! _koopa_is_installed shiny-server
then
    install-shiny-server
fi

_koopa_update_lmod_config

# Don't attempt to patch system env to support '-S' flag.
# Should no longer be an issue on VMs, as of 2020.
if [[ -e "/bin/env.bak" ]]
then
    sudo rm -v "/bin/env"
    sudo mv -v "/bin/env.bak" "/bin/env"
fi

# OpenJDK moved to '/n/app'.
sudo rm -frv /opt/jdk

_koopa_set_permissions /usr/local
_koopa_set_permissions /n/app
sudo chmod 0777 /n/app/python/pyenv/shims

_koopa_success "Azure VM is configured correctly."
