#!/usr/bin/env bash
set -Eeu -o pipefail

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../include/header.sh"

broken=0
rsync=0
yum=0

#sudo rm -rf /usr/local/Genrich
#sudo rm -rf /usr/local/conda
#sudo rm -rf /usr/local/omicsoft
#sudo rm -rf /usr/local/perlbrew
#sudo rm -rf /usr/local/pyenv
#sudo rm -rf /usr/local/rbenv

while (("$#"))
do
    case "$1" in
        --all)
            broken=1
            rsync=1
            yum=1
            shift 1
            ;;
        --broken)
            broken=1
            shift 1
            ;;
        --rsync)
            rsync=1
            shift 1
            ;;
        --yum)
            yum=1
            shift 1
            ;;
        *)
            _koopa_invalid_arg "$1"
            ;;
    esac
done

# Don't attempt to patch system env to support '-S' flag.
if [[ -e "/bin/env.bak" ]]
then
    sudo rm "/bin/env"
    sudo mv "/bin/env.bak" "/bin/env"
fi

_koopa_message "Updating '/etc/profile.d'."
_koopa_update_profile
sudo ln -fnsv \
    "${KOOPA_PREFIX}/host/azure/etc/profile.d/constellation.sh" \
    "/etc/profile.d/."

_koopa_message "Updating '/etc/cron.d'."
sudo rm -fv "/etc/cron.d/cpi-"*
sudo rm -fv "/etc/cron.d/constellation"
sudo cp -v \
    "${KOOPA_PREFIX}/host/azure/etc/cron.d/constellation" \
    "/etc/cron.d/constellation"

# Refer to 'https://github.com/acidgenomics/docker' for details.
_koopa_message "Updating Docker config."
sudo systemctl stop docker
sudo ln -fnsv \
    "${KOOPA_PREFIX}/os/fedora/etc/docker/"* \
    "/etc/docker/."
sudo rm -frv "/var/lib/docker"
sudo mkdir -pv "/data00/var/lib/docker"
sudo ln -fnsv "/data00/var/lib/docker" "/var/lib/docker"
sudo systemctl enable docker
sudo systemctl start docker

if [[ "$yum" -eq 1 ]]
then
    _koopa_message "Updating yum/rpm packages."
    sudo yum update -y
    install-rhel-7-base
fi

if [[ "$rsync" -eq 1 ]]
then
    _koopa_message "Running rsync scripts (password required)."
    # rsync-bcbio
    # rsync-cellranger
    # if [[ ! -d "/usr/local/conda" ]]
    # then
    #     sudo rm -frv /usr/local/miniconda3
    #     sudo rm -frv /data00/miniconda3
    #     sudo mkdir -pv /data00/conda
    #     sudo chmod 2775 /data00/conda
    #     sudo chown -Rh mike:wheel /data00/conda
    #     rm -frv /usr/local/conda
    #     sudo ln -fnsv /data00/conda /usr/local/conda
    # fi
    # rsync-conda
    # if [[ ! -d "/data00/R" ]]
    # then
    #     sudo mkdir -pv /data00/R
    #     sudo chmod 2775 /data00/R
    #     sudo chown -Rh mike:wheel /data00/R
    # fi
    # rsync-r
fi

# Ensure that shared bioinfo user has correct dotfiles.
if [[ -d "${KOOPA_PREFIX}/dotfiles" ]]
then
    _koopa_message "Updating bioinfo user dotfiles."
    sudo -u bioinfo -H "$SHELL" -c "\
        rm -fv ~/.bash_logout; \
        rm -fv ~/.bash_profile; \
        rm -fv ~/.bashrc; \
        rm -fv ~/.condarc; \
        /usr/local/koopa/bin/link-dotfile --force \
            app/emacs/minimal/emacs.el emacs \
    "
fi

sudo rm -frv /usr/local/bin/{cellranger*,miniconda3}
sudo rm -frv /usr/local/{conda,miniconda3}

if [[ "$broken" -eq 1 ]]
then
    remove-broken-symlinks "/n"
    # remove-broken-symlinks "/data00/bcbio"
    # remove-broken-symlinks "/data00/cellranger"
    # remove-broken-symlinks "/data00/conda"
fi
