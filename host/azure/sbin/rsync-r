#!/usr/bin/env bash

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../include/header.sh"

_koopa_assert_has_sudo

source_user="$USER"

host_ip="$(ip-address)"
source_ip="10.100.100.132"

r_dir="/data00/R"
_koopa_assert_is_dir "$r_dir"

lib_link="${r_dir}/site-library/current"

koopa_home="$(_koopa_home)"
r_home="$(_koopa_r_home)"

mapfile -t flags < <(_koopa_rsync_flags)
flags+=("--omit-dir-times")

# Check for accidental sync from source machine.
if [[ "$source_ip" == "$host_ip" ]]
then
    _koopa_note "On source machine: '${source_ip}'. Skipping."
    exit 0
fi

# Fix shiny installed as root, if necessary.
if [[ -d "${lib_link}/shiny" ]]
then
    sudo chown -R "$source_user" "${lib_link}/shiny"
fi

_koopa_message "Updating '${r_dir}' from '${source_ip}'."
_koopa_note "Using flags: ${flags[*]}"

# shellcheck disable=SC2068
rsync ${flags[@]} \
    --rsync-path="sudo /usr/bin/rsync" \
    "${source_user}@${source_ip}:${r_dir}/" \
    "${r_dir}/"

# Update local symlinks.
_koopa_message "Updating 'site-library' symlinks."

if [[ -d "/usr/lib64/R" ]]
then
    sudo rm -frv "/usr/lib64/R/site-library"
    sudo ln -fnsv "$lib_link" "/usr/lib64/R/site-library"
    sudo ln -fnsv "${koopa_home}/os/fedora/etc/R/"* "/usr/lib64/R/etc/."
fi

if [[ -d "/usr/local/lib64/R" ]]
then
    sudo rm -frv "/usr/local/lib64/R/site-library"
    sudo ln -fnsv "$lib_link" "/usr/local/lib64/R/site-library"
fi

# Assuming we're symlinking the cellarized R site library.
# This will work for system R at '/usr/lib64/R' also.
sudo rm -frv "${r_home}/site-library"
sudo ln -fnsv "$lib_link" "${r_home}/site-library"
