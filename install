#!/usr/bin/env bash

# Install koopa.
# Modified 2019-06-20.

# Set `dev=1` to enable some additional developer configuration tweaks.
# Namely, this currently changes submodule remotes from HTTPS to git.

KOOPA_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd -P)"



usage() {
    cat << EOF
usage: install [-h]

Install koopa.

This script performs the following steps:

  1. Initialize top-level submodules (e.g. dotfiles).
  2. Recurse into dotfiles repo and initialize additional submodules.
  3. Configure profile for current user (default; e.g. '~/.bashrc'), or shared
     profile (use '--shared' flag) via '/etc/profile.d/'.

optional arguments:
  -h, --help
        Show this help message and exit.
  --devel
        Enable developer mode. This changes the repository URLs from HTTPS
        to SSH, for easier code commits.
  --mike
        Install Mike-specific configuration.
        Note that this flag also automatically enables '--devel'.
  --no-dotfiles
        Skip automatic generation of dot file symlinks.
  --shared
        Configure shared installation using '/etc/profile.d'.
        Set automatically when installed in '/usr/local' or '/opt'.
EOF
}



# Flags                                                                     {{{1
# ==============================================================================

while (("$#"))
do
    case "$1" in
        -h|--help)
            usage
            exit 0
            ;;
        --devel)
            devel=1
            shift 1
            ;;
        --mike)
            mike=1
            shift 1
            ;;
        --no-dotfiles)
            dotfiles=0
            shift 1
            ;;
        --shared)
            shared=1
            shift 1
            ;;
        --) # End argument parsing.
            shift
            break
            ;;
        --*|-*) # Unsupported flags.
            >&2 printf "Error: Invalid flag %s\n" "$1"
            exit 1
            ;;
    esac
done

[ "${mike:-0}" -eq 1 ] && devel=1



# Remove legacy cruft                                                       {{{1
# ==============================================================================

rm -rf "${KOOPA_DIR}/config"
rm -rf "${KOOPA_DIR}/dotfiles"
rm -rf "${KOOPA_DIR}/include"



# Initialize submodules                                                     {{{1
# ==============================================================================

(
    printf "\nInitializing submodules.\n"
    # shellcheck source=/dev/null
    cd "$KOOPA_DIR"
    git submodule init
    git submodule update --init --recursive
    git submodule sync --recursive
    # Change remote from HTTPS to git for easier commits.
    if [[ -n "${devel:-}" ]]
    then
        git remote set-url origin git@github.com:acidgenomics/koopa.git
    fi
)

(
    printf "\nInitializing dotfiles submodules.\n"
    # shellcheck source=/dev/null
    cd "${KOOPA_DIR}/system/config/dotfiles"
    git submodule init
    git submodule update --init --recursive
    git submodule sync --recursive
    # Change remote from HTTPS to git for easier commits.
    if [[ -n "${devel:-}" ]]
    then
        git remote set-url origin git@github.com:mjsteinbaugh/dotfiles.git
    fi
)



# Activate koopa                                                            {{{1
# ==============================================================================

# shellcheck source=/dev/null
. "${KOOPA_DIR}/activate"

# Ensure functions get resourced if activation step is skipped.
. "${KOOPA_DIR}/system/include/functions.sh"



# Shared user configuration                                                 {{{1
# ==============================================================================

# Checking for '/usr/local' installation automatically.
if echo "$KOOPA_DIR" | grep -qE "^/(opt|usr/local)/"
then
    shared=1
fi

if [[ -n "${shared:-}" ]]
then
    sudo_update_profile
    sudo_update_r_config
fi



# Dot files                                                                 {{{1
# ==============================================================================

# Never attempt to configure dotfiles for root.
[[ "$(id -u)" -eq 0 ]] && dotfiles=0

if [[ "${dotfiles:-1}" -eq 1 ]]
then
    printf "\nConfiguring dotfiles.\n"

    # Always create these dotfiles, even on a shared installation.
    . "${KOOPA_DIR}/system/install/dotfiles-shared.sh"

    [[ -z "${shared:-}" ]] && \
        . "${KOOPA_DIR}/system/install/dotfiles-local.sh"

        # Configure Mike-only dotfiles.
    [[ "${mike:-}" -eq 1 ]] && \
        . "${KOOPA_DIR}/system/install/dotfiles-mike.sh"

    # Remove legacy dotfile cruft.
    . "${KOOPA_DIR}/system/uninstall/dotfiles-legacy.sh"
fi
