#!/usr/bin/env bash
# shellcheck disable=SC1090,SC1091
set -Ee -o pipefail

echo "HELLO WORLD"
exit 0

echo "${BASH_SOURCE[0]}"

KOOPA_HOME="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd -P)"




group="$(_koopa_build_prefix_group)"

koopa_dir="/usr/local/koopa"
sudo mkdir -p "$koopa_dir"

# - darwin (macOS): admin
# - debian: sudo
# - fedora: wheel
group="wheel"

sudo chgrp "$group" "$koopa_dir"
sudo chmod g+w "$koopa_dir"

git clone --recursive https://github.com/acidgenomics/koopa.git "$koopa_dir"
"${koopa_dir}/install"




# Pre-flight checks                                                         {{{1
# ==============================================================================

# Error on root user.
if [[ "$(id -u)" -eq 0 ]]
then
    >&2 printf "Don't install koopa as root.\n"
    exit 1
fi



# Usage                                                                     {{{1
# ==============================================================================

usage() {
cat << EOF
usage: install [--help|-h] [--shared] [--dotfiles] [--mike] 

Install koopa.

optional arguments:
  --help, -h
        Show this help message and exit.
  --shared
        Enable shared user configuration via '/etc/profile.d/koopa.sh' file.
        Linux only. Not supported on macOS.
  --dotfiles
        Clone the dotfiles repo (https://github.com/acidgenomics/dotfiles)
        and automatically symlink recommended default configuration files.
  --mike
        Install Mike-specific configuration.
        This flag automatically enables '--dotfiles'.

note:
    Bash script.
    Updated 2019-09-27.
EOF
}



# Arguments                                                                 {{{1
# ==============================================================================

dotfiles=0
mike=0
shared=0

while (("$#"))
do
    case "$1" in
        --help|-h)
            usage
            exit 0
            ;;
        --dotfiles)
            dotfiles=1
            shift 1
            ;;
        --mike)
            mike=1
            shift 1
            ;;
        --shared)
            shared=1
            shift 1
            ;;
        --) 
            shift 1
            break
            ;;
        --*|-*)
            >&2 printf "Error: Invalid argument: '%s'\n" "$1"
            exit 1
            ;;
    esac
done

# Automatically clone dotfiles in Mike mode.
if [[ "$mike" -eq 1 ]]
then
    dotfiles=1
fi



# Script                                                                    {{{1
# ==============================================================================

group="$(_koopa_build_prefix_group)"

# Clone repo                                                                {{{2
# ------------------------------------------------------------------------------

koopa_dir="/usr/local/koopa"
sudo mkdir -p "$koopa_dir"

# - darwin (macOS): admin
# - debian: sudo
# - fedora: wheel
group="wheel"

sudo chgrp "$group" "$koopa_dir"
sudo chmod g+w "$koopa_dir"

git clone --recursive https://github.com/acidgenomics/koopa.git "$koopa_dir"
"${koopa_dir}/install"








# Remove legacy cruft                                                       {{{2
# ------------------------------------------------------------------------------

rm -frv "${KOOPA_HOME}/"{config,include}
rm -frv "${KOOPA_HOME}/bin/"{host,os,sudo}

# Activate koopa                                                            {{{2
# ------------------------------------------------------------------------------

printf "\nActivating koopa.\n"
force=1 source "${KOOPA_HOME}/activate"

# Shared user configuration                                                 {{{2
# ------------------------------------------------------------------------------

# Checking for '/usr/local' installation automatically.
# > if echo "$KOOPA_HOME" | grep -qE "^/(opt|usr/local)/"
# > then
# >     printf "\nShared installation detected at '%s'.\n" "$KOOPA_HOME"
# >     shared=1
# > fi

if [[ "$shared" -eq 1 ]]
then
    _koopa_update_profile
fi

# Dot files                                                                 {{{2
# ------------------------------------------------------------------------------

if [[ "$dotfiles" -eq 1 ]]
then
    printf "\nConfiguring dotfiles.\n"
    
    # Clone dotfiles repo, if necessary.
    if [[ ! -d "${KOOPA_HOME}/dotfiles" ]]
    then
        install-dotfiles
    fi
    
    # Always create these dotfiles, even on a shared installation.
    dotfile --force "condarc"
    dotfile --force "gitignore"
    dotfile --force "spacemacs"
    dotfile --force "tmux.conf"
    dotfile --force "vim"
    dotfile --force "vimrc"
    
    # Create local config files.
    if [[ "${shared:-0}" -eq 0 ]]
    then
        host_type="$(_koopa_host_type)"
        os_type="$(_koopa_os_type)"

        dotfile --force "Rprofile"
        dotfile --force "bash_profile"
        dotfile --force "bashrc"
        dotfile --force "kshrc"
        dotfile --force "shrc"
        dotfile --force "zshrc"

        # R
        if [[ "$os_type" == "darwin" ]]
        then
            dotfile --force "os/darwin/R"
        elif [[ "$host_type" == "harvard-o2" ]]
        then
            dotfile --force "host/harvard-o2/Renviron"
        elif [[ "$host_type" == "harvard-odyssey" ]]
        then
            dotfile --force "host/harvard-odyssey/Renviron"
        fi
    fi
    
    # Add Mike-specific dotfiles, if necessary.
    if [[ "$mike" -eq 1 ]]
    then
        source_repo="git@github.com:mjsteinbaugh/dotfiles-private.git"
        target_dir="$(_koopa_config_dir)/dotfiles-private"
        if [[ ! -d "$target_dir" ]]
        then
            git clone "$source_repo" "$target_dir"
        fi
        if _koopa_is_darwin
        then
            dotfile --force os/darwin/gitconfig
        else
            dotfile --force gitconfig
        fi
        dotfile --force --private Rsecrets
        dotfile --force --private secrets
        dotfile --force --private travis
        dotfile --force Rprofile
        dotfile --force forward
    fi
fi

# Additional                                                                {{{2
# ------------------------------------------------------------------------------

# Mike-specific configuration.
if [[ "$mike" -eq 1 ]]
then
    # Ensure the koopa remote is using SSH and not HTTPS.
    (
        cd "$KOOPA_HOME" || exit 1
        git remote set-url origin git@github.com:acidgenomics/koopa.git
    )
    
    # Clone the docker repo.
    source_repo="git@github.com:acidgenomics/docker.git"
    target_dir="$(_koopa_config_dir)/docker"
    if [[ ! -d "$target_dir" ]]
    then
        git clone --recursive "$source_repo" "$target_dir"
    fi

    # Clone the scripts-private repo.
    source_repo="git@github.com:mjsteinbaugh/scripts-private.git"
    target_dir="$(_koopa_config_dir)/scripts-private"
    if [[ ! -d "$target_dir" ]]
    then
        git clone --recursive "$source_repo"  "$target_dir"
    fi
fi

printf "Installation was successful.\n"
