#!/bin/sh
# shellcheck disable=SC1090,SC2236

# Activate koopa.
# Modified 2019-06-25.

# SC2236: zsh doesn't handle `-n` flag in place of `! -z` correctly in POSIX
# mode when using `[` instead of `[[`.



# Never activate for root user.
[ "$(id -u)" -eq 0 ] && return



# Usage                                                                     {{{1
# ==============================================================================

usage() {
    cat << EOF
usage: activate [-h] [--debug] [--force] [--minimal]

Activate koopa.

supported shells: bash, ksh, zsh

optional arguments:
    -h, --help
        Show this help message and exit.
    --debug, debug=1
        Enable debugging mode. Used for Travis CI build checks.
    --force, force=1
        Force reactivation, even if koopa is already active.
    --minimal, minimal=1
        Minimal mode. Simply export koopa programs into PATH.
EOF
}



# Parse arguments                                                           {{{1
# ==============================================================================

# FIXME Consider removing flag arguments, or shift params.

for i in "$@"
do
    case "$i" in
        -h|--help)
            usage
            exit
            ;;
        --debug)
            export KOOPA_DEBUG=1
            ;;
        --force)
            # FIXME This flag will pass through to conda and cause error.
            force=1
            ;;
        --minimal)
            export KOOPA_MINIMAL=1
            ;;
        --*|-*) # Unsupported flags.
            >&2 printf "Error: Invalid flag %s\n" "$1"
            exit 1
            ;;
    esac
done

unset -f usage



# Initial checks                                                            {{{1
# ==============================================================================

# Early return if koopa is already active.
# We may need to tweak this approach to work properly with bash subshells.

[ ! -z "${HPC_INTERACTIVE_JOB:-}" ] && force=1
[ -z "${TMUX:-}" ] && force=1
[ ! -z "${KOOPA_HOME:-}" ] && [ "${force:-0}" -eq 0 ] && return



# Debug mode                                                                {{{1
# ==============================================================================

if [ ! -z "${KOOPA_DEBUG:-}" ]
then
    set -o errexit
    set -o nounset
    set -o pipefail
    set -o xtrace
    if [ ! -z "${BASH_VERSION:-}" ]
    then
        set -o errtrace
    fi
fi



# Locate koopa home                                                         {{{1
# ==============================================================================

if [ ! -z "${BASH_VERSION:-}" ]
then
    KOOPA_SHELL="bash"
    # SC2039: In POSIX sh, array references are undefined.
    # shellcheck disable=SC2039
    file="${BASH_SOURCE[0]}"
elif [ ! -z "${KSH_VERSION:-}" ]
then
    KOOPA_SHELL="ksh"
    # SC2154: .sh.file is referenced but not assigned.
    # shellcheck disable=SC2154
    file="${.sh.file}"
elif [ ! -z "${ZSH_VERSION:-}" ]
then
    KOOPA_SHELL="zsh"
    # Note that sourcing in `/etc/profile` doesn't return script path in `$0`,
    # which is commonly recommended online in place of `$BASH_SOURCE`. `$0` in
    # this case instead unexpectedly returns `_src_etc_profile`.
    # > file="${0:a}"
    # > file="$0"
    # https://stackoverflow.com/a/23259585/3911732
    file="${(%):-%N}"
else
    >&2 printf "Error: Failed to detect supported shell.\n"
    >&2 printf "Supported: bash, ksh, zsh.\n\n"
    >&2 printf "  SHELL: %s\n" "$SHELL"
    >&2 printf "      0: %s\n" "$0"
    >&2 printf "      -: %s\n" "$-"
    return 1
fi

if [ ! -f "${file:-}" ]
then
    >&2 printf "Error: Failed to detect absolute path of activation script.\n"
    return 1
fi

# Fake realpath support, if necessary.
if ! command -v realpath >/dev/null
then
    alias realpath="readlink -f"
fi

KOOPA_HOME="$(dirname "$(realpath "$file")")"
export KOOPA_HOME
unset -v file

# Load shared functions.
# shellcheck source=/dev/null
. "${KOOPA_HOME}/system/include/functions.sh"

# Get location of activation scripts.
activate_dir="${KOOPA_HOME}/system/activate"



# Basic shell configuration                                                 {{{1
# ==============================================================================

. "${activate_dir}/preflight.sh"

exports_dir="${activate_dir}/exports"
. "${exports_dir}/path.sh"
. "${exports_dir}/xdg-base-directory.sh"
. "${exports_dir}/general.sh"
unset -v exports_dir



# Extra shell configuration                                                 {{{1
# ==============================================================================

if [ "${KOOPA_MINIMAL:-0}" -eq 0 ]
then
    . "${activate_dir}/set.sh"
    . "${activate_dir}/umask.sh"
    . "${activate_dir}/aliases.sh"
    . "${activate_dir}/secrets.sh"
    . "${activate_dir}/ssh-key.sh"

    programs_dir="${activate_dir}/programs"
    . "${programs_dir}/conda.sh"
    . "${programs_dir}/conda-envs.sh"
    . "${programs_dir}/perlbrew.sh"
    . "${programs_dir}/rbenv.sh"
    . "${programs_dir}/aspera.sh"
    . "${programs_dir}/ensembl-perl-api.sh"
    . "${programs_dir}/bcbio.sh"
    . "${programs_dir}/virtualenv.sh"
    unset -v programs_dir

    # Shell-specific configuration.
    if [ "$KOOPA_SHELL" = "bash" ]
    then
        bash_dir="${activate_dir}/shell/bash"
        . "${bash_dir}/shopt.sh"
        . "${bash_dir}/bind.sh"
        . "${bash_dir}/ps1.sh"
        unset -v bash_dir
    elif [ "$KOOPA_SHELL" = "zsh" ]
    then
        # `~/.zhsrc` file is required for Z shell to configure correctly.
        dotfile -q shrc
        dotfile -q zshrc
    fi

    # Platform-specific configuration.
    if _koopa_is_darwin
    then
        darwin_dir="${activate_dir}/os/darwin"
        . "${darwin_dir}/aliases.sh"
        . "${darwin_dir}/grc-colors.sh"
        . "${darwin_dir}/exports.sh"
        . "${darwin_dir}/programs/homebrew.sh"
        unset -v darwin_dir
    fi

    # Set up the today bucket.
    bash touch-today-bucket
fi



# Post-flight checks and clean-up                                           {{{1
# ==============================================================================

unset -v KOOPA_SHELL
unset -v activate_dir
unset -v colors
