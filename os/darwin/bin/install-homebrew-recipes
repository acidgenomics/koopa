#!/usr/bin/env bash
set -Eeu -o pipefail

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../include/header.sh"
_koopa_assert_has_no_args "$@"
_koopa_assert_is_installed brew

export HOMEBREW_FORCE_BOTTLE=1



# Taps                                                                      {{{1
# ==============================================================================

_koopa_message "Updating taps."
brew tap mongodb/brew
brew tap osgeo/osgeo4mac



# Casks                                                                     {{{1
# ==============================================================================

_koopa_message "Installing casks."
installed_casks="$(brew cask list)"
casks=(
    # Priority
    java
    osxfuse
    xquartz
    # Alphabetical
    1password
    adoptopenjdk  # igv
    alfred
    aspera-connect
    authy
    basictex
    bbedit
    bibdesk
    coconutbattery
    coda
    emacs
    fiji
    firefox
    github
    google-chrome
    google-cloud-sdk
    google-drive-file-stream
    gpg-suite
    hazel
    igv
    iterm2
    keka
    kitty
    libreoffice
    netnewswire
    onyx
    r
    safari-technology-preview
    skype
    spillo
    sublime-text
    superduper
    textmate
    torbrowser
    tower
    transmit
    tunnelblick
    visual-studio-code
    vlc
    wine-stable
    xld
    # Non-admin permission issues
    carbon-copy-cloner
    little-snitch
)
for cask in "${casks[@]}"
do
    if echo "$installed_casks" | grep -Eq "^${cask}$"
    then
        _koopa_note "${cask} is already installed."
        continue
    fi
    brew cask install "$cask"
done

_koopa_message "Installing casks with Gatekeeper issues."
casks=(
    alacritty
    calibre
    docker
    julia
    omnidisksweeper
    rstudio
)
for cask in "${casks[@]}"
do
    if echo "$installed_casks" | grep -Eq "^${cask}$"
    then
        _koopa_note "${cask} is already installed."
        continue
    fi
    brew cask install "$cask" --no-quarantine
done



# Brews                                                                     {{{1
# ==============================================================================

# LLVM takes up 4 GB of disk space but is required for some Python packages.
# In particular, if we want to install umap-learn, this is now required.
# Note that numba > llvmlite currently only works with LLVM 7.

# Use osgeo-gdal instead of regular gdal.
# This gets updated more regularly.

_koopa_message "Installing brews."
installed_brews="$(brew list)"
brews=(
    # Priority
    bash
    fish
    ksh
    tcsh
    zsh
    openblas
    tcl-tk
    flac
    lame
    # Alphabetical
    autoconf
    autojump
    automake
    awscli
    bash-completion
    bfg
    ccache
    circleci
    cmake
    convmv
    coreutils
    curl
    exa
    exiftool
    ffmpeg
    findutils
    flac
    gcc
    git
    git-lfs
    go
    gsl
    hdf5
    hub
    igraph
    imagemagick
    ksh
    leiningen
    lesspipe
    libav
    libgit2
    libiconv
    libomp
    libressl
    librsvg
    libssh2
    libxml2
    libxslt
    llvm@7
    mariadb-connector-c
    mas
    mongodb-community
    neofetch
    neovim
    node
    open-mpi
    osgeo-gdal
    pandoc
    pandoc-citeproc
    pandoc-crossref
    parallel
    pkg-config
    protobuf
    pyenv
    python
    rbenv
    rsync
    ruby-build
    rust
    rustup-init
    screen
    shellcheck
    shellharden
    sox
    sshfs
    tesseract
    the_silver_searcher  # ag
    tmux
    trash
    tree
    udunits
    v8
    vim
    wget
    youtube-dl
    zlib
    # External
    vitorgalvao/tiny-scripts/cask-repair
)
for brew in "${brews[@]}"
do
    name="$(basename "$brew")"
    if echo "$installed_brews" | grep -Eq "^${name}$"
    then
        _koopa_note "${name} is already installed."
        continue
    fi
    brew install "$brew"
done
