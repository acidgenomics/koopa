#!/usr/bin/env bash

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../include/header.sh"

_koopa_brew_update() { # {{{1
    # """
    # Updated outdated Homebrew brews and casks.
    # @note Updated 2020-07-01.
    #
    # Alternative approaches:
    # > brew list \
    # >     | xargs brew reinstall --force-bottle --cleanup \
    # >     || true
    # > brew cask outdated --greedy \
    # >     | xargs brew cask reinstall \
    # >     || true
    #
    # @seealso
    # Refer to useful discussion regarding '--greedy' flag.
    # https://discourse.brew.sh/t/brew-cask-outdated-greedy/3391
    # """
    [[ "$#" -eq 0 ]] || return 1
    _koopa_is_installed brew || return 1
    local casks name_fancy
    name_fancy="Homebrew"
    _koopa_update_start "$name_fancy"
    brew analytics off
    brew update >/dev/null
    _koopa_h2 "Updating brews."
    brew upgrade --force-bottle || true
    _koopa_h2 "Updating casks."
    casks="$(_koopa_brew_cask_outdated)"
    if [[ -n "$casks" ]]
    then
        _koopa_info "${#casks[@]} outdated casks detected."
        _koopa_print "${casks[@]}"
        _koopa_print "${casks[@]}" \
            | cut -d " " -f 1 \
            | xargs brew cask reinstall \
            || true
    fi
    _koopa_h2 "Running cleanup."
    brew cleanup -s || true
    rm -fr "$(brew --cache)"
    _koopa_update_r_config
    _koopa_update_success "$name_fancy"
    return 0
}

_koopa_exit_if_not_installed brew
_koopa_brew_update "$@"
