# """
# R for macOS Makevars configuration.
# Updated 2021-04-29.
#
# '-O3' should be faster than '-O2' (default) level optimization.
#
# See also:
# - https://github.com/Rdatatable/data.table/wiki/
#     Installation#openmp-enabled-compiler-for-mac
# - https://mac.r-project.org/openmp/
# - https://thecoatlessprofessor.com/programming/cpp/
#     r-compiler-tools-for-rcpp-on-macos/
# """



# Apple Clang configuration {{{1
# ==============================================================================

# Note that this doesn't support OpenMP currently, which is required to build
# data.table with parallel thread support.

# > SDK_LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
# >
# > CCFLAGS=-isysroot $(SDK_LOC)
# > CFLAGS=-isysroot $(SDK_LOC)
# > CPPFLAGS=-isysroot $(SDK_LOC) -I/usr/local/include
# > CXXFLAGS=-isysroot $(SDK_LOC)



# GCC (Official GNU fortran) configuration {{{1
# ==============================================================================

# Download and install GNU Fortran complier from CRAN, which contains full GCC.
# CRAN recommends official GNU Fortran 8.2 from fxcoudert.
#
# This config successfully builds rJava.
#
# NOTE Seeing this warning pop up (2021-04-29):
# ## ld: warning: argument missing after -rpath

# > C_LOC=/usr/local/gfortran
# > SDK_LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
# >
# > CC=$(C_LOC)/bin/gcc -fopenmp
# > CXX11=$(C_LOC)/bin/g++ -fopenmp
# > CXX=$(C_LOC)/bin/g++ -fopenmp
# >
# > CFLAGS=-g -O3 -Wall -pedantic -std=gnu99 -mtune=native -pipe
# > CPPFLAGS=-I$(C_LOC)/include -I$(SDK_LOC)/usr/include
# > CXXFLAGS=-g -O3 -Wall -pedantic -std=c++11 -mtune=native -pipe
# > LDFLAGS=-L$(C_LOC)/lib -Wl,-rpath,-I$(C_LOC)/lib



# Homebrew LLVM configuration {{{1
# ==============================================================================

# This configuration is intended for data.table to run in parallel properly,
# with proper OpenMP support. It works nicely for data.table but currently
# errors for rJava.


# > HOMEBREW_OPT_LOC=/usr/local/opt
# > SDK_LOC=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
# >
# > LLVM_LOC=$(HOMEBREW_OPT_LOC)/llvm
# > GETTEXT_LOC="$(HOMEBREW_OPT_LOC)/gettext
# >
# > CC=$(LLVM_LOC)/bin/clang -fopenmp
# > CXX11=$(LLVM_LOC)/bin/clang++ -fopenmp
# > CXX=$(LLVM_LOC)/bin/clang++ -fopenmp
#
# > CFLAGS=-g -O3 -Wall -pedantic -std=gnu99 -mtune=native -pipe
# > CPPFLAGS=-I$(GETTEXT_LOC)/include -I$(LLVM_LOC)/include -I$(SDK_LOC)/usr/include
# > CXXFLAGS=-g -O3 -Wall -pedantic -std=c++11 -mtune=native -pipe
# > LDFLAGS=-L$(GETTEXT_LOC)/lib -L$(LLVM_LOC)/lib -Wl,-rpath,$(LLVM_LOC)/lib
