# """
# R for macOS Makevars configuration.
# Updated 2021-04-29.
#
#
# Assuming we're using GCC install from GNU Fortran complier
# (tested on macOS Big Sur).
# 
# Download and install GNU Fortran complier from CRAN, which contains full GCC.
# CRAN recommends official GNU Fortran 8.2 from fxcoudert.
#
# See also:
# - https://github.com/Rdatatable/data.table/wiki/
#     Installation#openmp-enabled-compiler-for-mac
# - https://mac.r-project.org/openmp/
# - https://thecoatlessprofessor.com/programming/cpp/
#     r-compiler-tools-for-rcpp-on-macos/
# """



# Apple Clang configuration {{{1
# ==============================================================================

# Note that this doesn't support OpenMP currently, which is required to build
# data.table with parallel thread support.

CCFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
CFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
CPPFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -I/usr/local/include
CXXFLAGS=-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk



# GCC (Official GNU fortran) configuration {{{1
# ==============================================================================

# This config successfully builds rJava.

# NOTE Seeing this warning pop up (2021-04-29):
# ## ld: warning: argument missing after -rpath

# > LOC = /usr/local/gfortran
# > CC=$(LOC)/bin/gcc -fopenmp
# > CXX=$(LOC)/bin/g++ -fopenmp
# > CXX11 = $(LOC)/bin/g++ -fopenmp # for fst package
# > CFLAGS=-g -O3 -Wall -pedantic -std=gnu99 -mtune=native -pipe
# > CPPFLAGS=-I$(LOC)/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
# > CXXFLAGS=-g -O3 -Wall -pedantic -std=c++11 -mtune=native -pipe
# > LDFLAGS=-L$(LOC)/lib -Wl,-rpath,-I$(LOC)/lib



# Homebrew LLVM configuration {{{1
# ==============================================================================

# This configuration is intended for data.table to run in parallel properly,
# with proper OpenMP support. It works nicely for data.table but currently
# errors for rJava.

# > LLVM_LOC = /usr/local/opt/llvm
# > CC=$(LLVM_LOC)/bin/clang -fopenmp
# > CXX=$(LLVM_LOC)/bin/clang++ -fopenmp
# > # -O3 should be faster than -O2 (default) level optimisation ..
# > CFLAGS=-g -O3 -Wall -pedantic -std=gnu99 -mtune=native -pipe
# > CXXFLAGS=-g -O3 -Wall -pedantic -std=c++11 -mtune=native -pipe
# > LDFLAGS=-L/usr/local/opt/gettext/lib -L$(LLVM_LOC)/lib -Wl,-rpath,$(LLVM_LOC)/lib
# > CPPFLAGS=-I/usr/local/opt/gettext/include -I$(LLVM_LOC)/include -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
