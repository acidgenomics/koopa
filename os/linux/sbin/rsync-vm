#!/usr/bin/env bash

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../include/header.sh"

koopa::assert_has_args "$#"

# Argument parsing {{{1
# ==============================================================================

pos=()
while (("$#"))
do
    case "$1" in
        --source-ip=*)
            source_ip="${1#*=}"
            shift 1
            ;;
        --source-ip)
            source_ip="$2"
            shift 2
            ;;
        --)
            shift 1
            break
            ;;
        --*|-*)
            koopa::invalid_arg "$1"
            ;;
        *)
            pos+=("$1")
            shift 1
            ;;
    esac
done
[[ "${#pos[@]}" -gt 0 ]] && set -- "${pos[@]}"

if [[ -z "${source_ip:-}" ]]
then
    koopa::missing_arg
fi

# Source check {{{1
# ==============================================================================

# Ensure that source and local (host) IP addresses are not identical. If they
# are, early exit without error, as this script is called inside 'configure-vm'.
host_ip="$(koopa::local_ip_address)"
if [[ "$source_ip" == "$host_ip" ]]
then
    koopa::exit "Skipping rsync because '${host_ip}' is source machine."
fi

# Custom paths {{{1
# ==============================================================================

if [[ "$#" -gt 0 ]]
then
    for prefix in "$@"
    do
        koopa::rsync_vm \
            --prefix="$prefix" \
            --source-ip="$source_ip"
    done
    exit 0
fi

# Default paths {{{1
# ==============================================================================

# app prefix {{{2
# ------------------------------------------------------------------------------

# Need to sync this before make prefix step, otherwise some symlinks won't
# resolve as expected, and chmod will error.

app_prefix="$(koopa::app_prefix)"

if [[ -d "$app_prefix" ]]
then
    # Skipping programs that are specific to powerful multi-core VMs.
    readarray -t app_flags <<< "$(koopa::rsync_flags)"
    if ! koopa::is_powerful
    then
        app_flags+=(
            "--exclude=bcbio"
            "--exclude=cellranger"
            "--exclude=cellranger-atac"
            "--exclude=omicsoft"
        )
    fi
    koopa::rsync_vm \
        --prefix="$app_prefix" \
        --rsync-flags="${app_flags[*]}" \
        --source-ip="$source_ip"
else
    koopa::note "Skipping '${app_prefix}'."
fi

# make prefix {{{2
# ------------------------------------------------------------------------------

make_prefix="$(koopa::make_prefix)"

if [[ -d "$make_prefix" ]]
then
    koopa::rsync_vm \
        --prefix="$make_prefix" \
        --source-ip="$source_ip"
else
    koopa::note "Skipping '${make_prefix}'."
fi

# refdata prefix {{{2
# ------------------------------------------------------------------------------

refdata_prefix="$(koopa::refdata_prefix)"

if [[ -d "$refdata_prefix" ]]
then
    # Skipping references that are specific to powerful multi-core VMs.
    readarray -t refdata_flags <<< "$(koopa::rsync_flags)"
    if ! koopa::is_powerful
    then
        refdata_flags+=(
            "--exclude=bcbio"
            "--exclude=cellranger"
            "--exclude=cellranger-atac"
            "--exclude=gtex"
        )
    fi
    koopa::rsync_vm \
        --prefix="$refdata_prefix" \
        --rsync-flags="${refdata_flags[*]}" \
        --source-ip="$source_ip"
else
    koopa::note "Skipping '${refdata_prefix}'."
fi

koopa::success "rsync from ${source_ip} was successful."
