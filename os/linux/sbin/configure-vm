#!/usr/bin/env bash
set -Eeu -o pipefail

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../include/header.sh"

_koopa_assert_has_no_envs

case "${KOOPA_CONFIG:-}" in
    constellation-aws)
        data_disk="/mnt/data01"
        source_ip="10.201.20.32"
        ;;
    constellation-azure)
        data_disk="/data00"
        source_ip="10.100.100.132"
        ;;
    *)
        _koopa_stop "Failed to detect supported VM config in 'KOOPA_CONFIG'."
        exit 1
        ;;
esac

source=0

while (("$#"))
do
    case "$1" in
        --source)
            source=1
            shift 1
            ;;
        *)
            _koopa_invalid_arg "$1"
            ;;
    esac
done

# Remove default user shell configuration files.
sudo rm -fv /etc/skel/.{bash_logout,bashrc,emacs,profile,zshrc}

_koopa_enable_passwordless_sudo
_koopa_prepare_make_prefix

# Prepare '/n/' share on data disk.
if [[ -d "${data_disk:-}" ]]
then
    _koopa_message "Symlinking '/n' on '${data_disk}'."
    sudo mkdir -pv "${data_disk}/n/app"
    sudo ln -fnsv "${data_disk}/n" /n
fi

if [[ "${KOOPA_CONFIG:-}" == "constellation-aws" ]]
then
    # Constellation AWS                                                   # {{{1
    # --------------------------------------------------------------------------
    install-debian-base

    _koopa_message "Updating '/etc/profile.d'."
    _koopa_update_profile
    sudo ln -fnsv \
        "$(_koopa_prefix)/host/aws/etc/profile.d/constellation.sh" \
        "/etc/profile.d/."

    if _koopa_is_matching_fixed "$HOSTNAME" awslabapp32
    then
        install-rstudio-server-pro
    fi
elif [[ "${KOOPA_CONFIG:-}" == "constellation-azure" ]]
then
    # Constellation Azure                                                 # {{{1
    # --------------------------------------------------------------------------
    install-rhel-7-base

    # Don't attempt to patch system env to support '-S' flag.
    # Should no longer be an issue on VMs, as of 2020.
    if [[ -e "/bin/env.bak" ]]
    then
        sudo rm -v "/bin/env"
        sudo mv -v "/bin/env.bak" "/bin/env"
    fi

    # OpenJDK moved to '/n/app'.
    sudo rm -frv /opt/jdk

    _koopa_message "Updating '/etc/profile.d'."
    _koopa_update_profile
    sudo ln -fnsv \
        "$(_koopa_prefix)/host/azure/etc/profile.d/constellation.sh" \
        "/etc/profile.d/."

    _koopa_message "Updating '/etc/cron.d'."
    sudo rm -fv "/etc/cron.d/cpi-"*
    sudo rm -fv "/etc/cron.d/constellation"
    sudo cp -v \
        "$(_koopa_prefix)/host/azure/etc/cron.d/constellation" \
        "/etc/cron.d/constellation"

    # Ensure that shared bioinfo user has correct dotfiles.
    if [[ -d "$(_koopa_prefix)/dotfiles" ]]
    then
        _koopa_message "Updating bioinfo user dotfiles."
        sudo -u bioinfo -H "$SHELL" -c "\
            rm -fv ~/.bash_logout; \
            rm -fv ~/.bash_profile; \
            rm -fv ~/.bashrc; \
            rm -fv ~/.condarc; \
            /usr/local/koopa/bin/link-dotfile --force \
                app/emacs/minimal/emacs.el emacs \
        "
    fi

    _koopa_message "Updating '/data00' structure."
    sudo rm -frv "/data00/"{R,bcbio,cellranger,cellranger-atac,conda,docker,var}

    if _koopa_is_matching_fixed "$HOSTNAME" azlabapp32
    then
        install-rstudio-server-pro
    fi
fi

rsync-vm --data-disk="$data_disk" --source-ip="$source_ip"

install-openjdk

if [[ "$source" -eq 1 ]]
then
    # /usr/local/cellar
    install-cellar-coreutils
    install-cellar-bash
    install-cellar-zsh
    install-cellar-fish
    install-cellar-tmux
    install-cellar-git
    install-cellar-gnupg
    install-cellar-lua
    install-cellar-luarocks
    if ! _koopa_is_debian
    then
        install-cellar-r
    fi
    install-cellar-python
    install-cellar-vim
    install-cellar-neovim
    install-cellar-emacs
    install-cellar-sqlite
    install-cellar-proj
    install-cellar-gdal
    install-cellar-hdf5
    install-cellar-go
    install-cellar-gsl
    install-cellar-perl
    install-cellar-ruby
    install-cellar-julia
    install-cellar-htop
    install-cellar-shellcheck
    install-cellar-neofetch
    install-cellar-genrich
    install-cellar-autojump
    install-cellar-fzf
    install-cellar-the-silver-searcher
    # /n/app
    install-rust
    install-perlbrew
    install-rbenv
    install-pyenv
    r-javareconf
    # conda-create-bioinfo-envs
    # install-rust-cargo-crates
    # bcbio-nextgen
    # 10X Genomics CellRanger, CellRanger ATAC
fi

if _koopa_is_azure
then
    # Install this after installing Python 3.
    install-azure-cli
fi

if ! _koopa_is_installed rstudio-server
then
    install-rstudio-server
fi

if ! _koopa_is_installed shiny-server
then
    install-shiny-server
fi

_koopa_update_lmod_config

_koopa_set_permissions /usr/local
_koopa_set_permissions /n/app

sudo chmod 0777 /n/app/python/pyenv/shims

koopa update

_koopa_success "${KOOPA_CONFIG} VM is configured correctly."
