#!/usr/bin/env bash
set -Eeu -o pipefail

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../include/header.sh"

# """
# https://github.com/Kitware/CMake
#
#
# Error from GCC clobbering libstdc++:
#
# libstdc++.so.6: version `GLIBCXX_3.4.XXX' not found
# https://stackoverflow.com/questions/44773296
#
# GCC 4.9.0: libstdc++.so.6.0.20
# GCC 5.1.0: libstdc++.so.6.0.21
# GCC 6.1.0: libstdc++.so.6.0.22
# GCC 7.1.0: libstdc++.so.6.0.23
# GCC 7.2.0: libstdc++.so.6.0.24
# GCC 8.0.0: libstdc++.so.6.0.25
# [...]
# GCC 9.2.0: libstdc++.so.6.0.27
#
# GCC 9.2.0: version `GLIBCXX_3.4.26' not found
# """

name="cmake"
version="$(_koopa_variable "$name")"
prefix="$(_koopa_cellar_prefix)/${name}/${version}"

_koopa_exit_if_dir "$prefix"

_koopa_h1 "Installing ${name} ${version} at '${prefix}'."

_koopa_assert_has_no_args "$@"
_koopa_assert_has_no_envs

jobs="$(_koopa_cpu_count)"
tmp_dir="$(_koopa_tmp_dir)"

(
    _koopa_cd_tmp_dir "$tmp_dir"
    file="cmake-${version}.tar.gz"
    url="https://github.com/Kitware/CMake/releases/download/v${version}/${file}"
    _koopa_download "$url"
    _koopa_extract "$file"
    cd "${name}-${version}" || exit 1
    # export CC=/usr/bin/gcc
    # export CXX=/usr/bin/g++
    # The 'configure' script also works here.
    # --parallel flag
    # --no-system-libs (default)
    # --system-libs
    # > ./bootstrap --help
    ./bootstrap \
        --parallel="$jobs" \
        --prefix="$prefix"
    make --jobs="$jobs"
    make install
) 2>&1 | tee "$(_koopa_tmp_log_file)"

rm -fr "$tmp_dir"

_koopa_link_cellar "$name" "$version"

_koopa_install_success "$name"
