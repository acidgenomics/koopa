#!/usr/bin/env bash
set -Eeu -o pipefail

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../include/header.sh"

# """
# The '--enable-optimizations' flag can boost Python performance by ~10% but
# currently runs into build issues with old compilation chains (e.g. GCC 4),
# which are common on RHEL and other conservative cluster/VM configurations.
# Therefore, we are disabling this flag by default.
#
#
# Multiprocessing tests can fail on very large multi-core VMs due to too many
# open files, so disable tests if necessary.
#
#
# Install libffi if you hit cryptic '_ctypes' module errors.
#
# See also:
# - https://stackoverflow.com/questions/27022373
#
#
# I'm seeing a 'generate-posix-vars' error pop up with 3.8.0 install on RHEL 7.
# 
# See also:
# - https://bugs.python.org/issue33374
# - https://github.com/pyenv/pyenv/issues/1388
#
#
# Ubuntu 18 LTS requires LDFLAGS to be set, otherwise we hit:
# python3: error while loading shared libraries: libpython3.8.so.1.0: cannot
# open shared object file: No such file or directory
#
# This alone works, but I've set other paths, as recommended.
# LDFLAGS="-Wl,-rpath ${prefix}/lib"
#
# Check config with:
# > ldd /usr/local/bin/python3
#
# See also:
# - https://stackoverflow.com/questions/43333207
# """

name="python"
version="$(_koopa_variable "$name")"
prefix="$(_koopa_cellar_prefix)/${name}/${version}"

_koopa_exit_if_dir "$prefix"

_koopa_h1 "Installing ${name} ${version} at '${prefix}'."

_koopa_assert_has_no_args "$@"
_koopa_assert_has_no_envs

build="$(_koopa_make_build_string)"
exe_file="${prefix}/bin/python3"
jobs="$(_koopa_cpu_count)"
make_prefix="$(_koopa_make_prefix)"
tmp_dir="$(_koopa_tmp_dir)/${name}"

if [[ -d "${HOME}/.virtualenvs" ]]
then
    _koopa_note "Removing existing virtual environments."
    rm -frv "${HOME}/.virtualenvs"
fi

(
    _koopa_cd_tmp_dir "$tmp_dir"
    file="Python-${version}.tar.xz"
    url="https://www.python.org/ftp/python/${version}/${file}"
    _koopa_download "$url"
    _koopa_extract "$file"
    cd "Python-${version}" || exit 1
    ./configure \
        --build="$build" \
        --prefix="$prefix" \
        --enable-shared \
        --without-ensurepip \
        LDFLAGS="-Wl,--rpath=${make_prefix}/lib"
    make --jobs="$jobs"
    # > make test
    make install
)

rm -fr "$tmp_dir"

_koopa_link_cellar "$name" "$version"

_koopa_install_pip "$exe_file"
_koopa_install_pipx "$exe_file"

_koopa_link_cellar "$name" "$version"

# > build_prefix="$(_koopa_make_prefix)"
# > _koopa_h1 "Symlinking 'python3' to 'python' in '${build_prefix}'."
# > ln -fnsv "${build_prefix}/bin/python3" "${build_prefix}/bin/python"

_koopa_success "Installation of ${name} was successful."
_koopa_note "Reinstall cellar vim, which depends on Python."
