#!/usr/bin/env bash
set -Eeu -o pipefail

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../include/header.sh"

# """
# https://github.com/junegunn/fzf/blob/master/BUILD.md
# Note that this script will download files into '~/go'.
# """

name='fzf'
version="$(_koopa_variable "$name")"
prefix="$(_koopa_fzf_prefix)/${version}"
_koopa_exit_if_dir "$prefix"

_koopa_install_start "$name" "$prefix"

_koopa_assert_has_no_args "$@"
_koopa_assert_has_no_envs
_koopa_activate_go
_koopa_assert_is_installed go

goroot="$(go env GOROOT)"
_koopa_dl "GOROOT" "$goroot"

prefix_parent="$(dirname "$prefix")"
jobs="$(_koopa_cpu_count)"
tmp_dir="$(_koopa_tmp_dir)"

_koopa_mkdir "$prefix"

(
    _koopa_cd_tmp_dir "$tmp_dir"
    file="${version}.tar.gz"
    _koopa_download "https://github.com/junegunn/fzf/archive/${file}"
    _koopa_extract "$file"
    cd "${name}-${version}" || exit 1
    make --jobs="$jobs"
    # > make test
    # This will copy fzf binary from 'target/' to 'bin/' inside tmp dir.
    # Note that this step does not copy to '/usr/bin/'.
    make install
    # > ./install --help
    ./install --bin --no-update-rc
    # Following approach used in Homebrew recipe here.
    rm -fr .[[:alnum:]]* src target
    cp -rv . "$prefix"
) 2>&1 | tee "$(_koopa_tmp_log_file)"

rm -fr "$tmp_dir"

(
    _koopa_cd "$prefix_parent"
    _koopa_ln "$version" "latest"
)

_koopa_set_permissions --recursive "$prefix_parent"

_koopa_install_success "$name"
_koopa_note "Reload the shell to complete activation."
