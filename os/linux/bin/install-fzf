#!/usr/bin/env bash

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../include/header.sh"

# """
# https://github.com/junegunn/fzf/blob/master/BUILD.md
# Note that this script will download files into '~/go'.
# """

version=

while (("$#"))
do
    case "$1" in
        --version=*)
            version="${1#*=}"
            shift 1
            ;;
        --version)
            version="$2"
            shift 2
            ;;
        *)
            koopa::invalid_arg "$1"
            ;;
    esac
done

name="fzf"
[[ -z "$version" ]] && version="$(koopa::variable "$name")"
prefix="$(koopa::fzf_prefix)/${version}"
koopa::exit_if_dir "$prefix"

koopa::install_start "$name" "$version" "$prefix"

koopa::assert_has_no_args "$#"
koopa::assert_has_no_envs
koopa::activate_go
koopa::assert_is_installed go

goroot="$(go env GOROOT)"
koopa::dl "GOROOT" "$goroot"

prefix_parent="$(dirname "$prefix")"
jobs="$(koopa::cpu_count)"
tmp_dir="$(koopa::tmp_dir)"

koopa::mkdir "$prefix"

(
    koopa::cd "$tmp_dir"
    file="${version}.tar.gz"
    koopa::download "https://github.com/junegunn/fzf/archive/${file}"
    koopa::extract "$file"
    cd "${name}-${version}" || exit 1
    make --jobs="$jobs"
    # > make test
    # This will copy fzf binary from 'target/' to 'bin/' inside tmp dir.
    # Note that this step does not copy to '/usr/bin/'.
    make install
    # > ./install --help
    ./install --bin --no-update-rc
    # Following approach used in Homebrew recipe here.
    rm -fr .[[:alnum:]]* src target
    cp -rv . "$prefix"
) 2>&1 | tee "$(koopa::tmp_log_file)"

rm -fr "$tmp_dir"

(
    koopa::cd "$prefix_parent"
    koopa::sys_ln "$version" "latest"
)

koopa::sys_set_permissions --recursive "$prefix_parent"

koopa::install_success "$name"
koopa::note "Reload the shell to complete activation."
