#!/usr/bin/env bash
set -Eeu -o pipefail

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../include/header.sh"

# """
# https://github.com/junegunn/fzf/blob/master/BUILD.md
# Note that this script will download files into '~/go'.
# """

name="fzf"
version="$(_koopa_variable "$name")"
cellar_prefix="$(_koopa_cellar_prefix)/${name}/${version}"
_koopa_is_dir "$cellar_prefix" && exit 0

_koopa_h1 "Installing ${name} ${version} at '${cellar_prefix}'."

_koopa_assert_has_no_args "$@"
_koopa_assert_has_no_envs
_koopa_assert_is_installed go

app_prefix="$(_koopa_app_prefix)/${name}/${version}"
jobs="$(_koopa_cpu_count)"
tmp_dir="$(_koopa_tmp_dir)/${name}"

goroot="$(go env GOROOT)"
_koopa_info "Go is installed at '${goroot}'."
_koopa_prefix_mkdir "$app_prefix"
_koopa_prefix_mkdir "$cellar_prefix"

(
    _koopa_cd_tmp_dir "$tmp_dir"
    file="${version}.tar.gz"
    _koopa_download "https://github.com/junegunn/fzf/archive/${file}"
    _koopa_extract "$file"
    cd "${name}-${version}" || exit 1
    make --jobs="$jobs"
    make test
    # This will copy fzf binary from 'target/' to 'bin/' inside tmp dir.
    # Note that this step does not copy to '/usr/bin/'.
    make install
    # > ./install --help
    ./install --bin --no-update-rc
    # Following approach used in Homebrew recipe here.
    rm -fr .[[:alnum:]]* src target
    cp -rv . "$app_prefix"
)

rm -fr "$tmp_dir"

app_prefix_dn="$(dirname "$app_prefix")"
_koopa_set_permissions "$app_prefix_dn"

_koopa_h1 "Linking from '${app_prefix}' into '${cellar_prefix}'."
cp -frsv \
    "${app_prefix}/"{bin,man} \
    "${cellar_prefix}/."

_koopa_h1 "Linking 'plugin' and 'shell' directories in '${app_prefix_dn}'."
ln -fnsv \
    "${app_prefix}/"{plugin,shell} \
    "${app_prefix_dn}/."

_koopa_link_cellar "$name" "$version"

_koopa_success "Installation of ${name} was successful."
_koopa_note "Reload the shell to complete activation."
