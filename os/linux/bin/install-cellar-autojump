#!/usr/bin/env bash
set -Eeu -o pipefail

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../include/header.sh"

# Run script with '--help' flag for options.
# Note that custom paths are incompatible with '--system' option.
#
# Arch example:
# > ./install.py \
# >     --destdir "${pkgdir}" \
# >     --prefix 'usr/' \
# >     --zshshare 'usr/share/zsh/site-functions'
#
# '--system' defaults:
# - /usr/local
# - _j copied into /usr/share/zsh/site-functions (for zsh)
# - Entry created in /etc/profile.d
#
# See also:
# https://github.com/wting/autojump/issues/338
#
# Install into the temporary and then copy into cellar, after modification.
# Can uninstall with uninstall.py script.

_koopa_assert_has_no_args "$@"
_koopa_assert_is_not_installed autojump
_koopa_assert_is_not_dir "${HOME}/.autojump"

name="autojump"
version="$(_koopa_variable "$name")"
prefix="$(_koopa_cellar_prefix)/${name}/${version}"
tmp_dir="$(_koopa_tmp_dir)/${name}"

_koopa_message "Installing ${name} ${version}."
_koopa_prefix_mkdir "$prefix"

(
    _koopa_cd_tmp_dir "$tmp_dir"
    file="release-v${version}.tar.gz"
    url="https://github.com/wting/autojump/archive/${file}"
    _koopa_download "$url"
    _koopa_extract "$file"
    cd "autojump-release-v${version}" || exit 1

    ./install.py \
        --destdir "target" \
        --prefix="" \
        --zshshare "share/zsh/site-functions"
    # Nuke the 'etc/profile.d/autojump.sh' script.
    # koopa handles this automatically.
    rm -fr target/etc
    cp -rv target/* "${prefix}/."
    rm -fr "$tmp_dir"
)

_koopa_link_cellar "$name" "$version"

_koopa_note "Reload the shell to complete installation."
