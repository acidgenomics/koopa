#!/usr/bin/env bash

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd -P)"
# shellcheck source=/dev/null
source "${script_dir}/../include/header.sh"

link_cellar=1
version=

while (("$#"))
do
    case "$1" in
        --cellar-only)
            link_cellar=0
            shift 1
            ;;
        --version=*)
            version="${1#*=}"
            shift 1
            ;;
        --version)
            version="$2"
            shift 2
            ;;
        *)
            _koopa_invalid_arg "$1"
            ;;
    esac
done

name="autoconf"
[[ -z "$version" ]] && version="$(_koopa_variable "$name")"
prefix="$(_koopa_cellar_prefix)/${name}/${version}"
_koopa_exit_if_dir "$prefix"

name_fancy="${name} ${version}"
_koopa_install_start "$name_fancy" "$prefix"

_koopa_assert_has_no_args "$@"
_koopa_assert_has_no_envs

gnu_mirror="$(_koopa_gnu_mirror)"
jobs="$(_koopa_cpu_count)"
tmp_dir="$(_koopa_tmp_dir)"

(
    _koopa_cd_tmp_dir "$tmp_dir"
    file="${name}-${version}.tar.xz"
    url="${gnu_mirror}/${name}/${file}"
    _koopa_download "$url"
    _koopa_extract "$file"
    cd "${name}-${version}" || exit 1
    ./configure --prefix="$prefix"
    make --jobs="$jobs"
    # > make check
    make install
) 2>&1 | tee "$(_koopa_tmp_log_file)"

rm -fr "$tmp_dir"

[[ "$link_cellar" -eq 1 ]] && _koopa_link_cellar "$name" "$version"

_koopa_install_success "$name_fancy"
