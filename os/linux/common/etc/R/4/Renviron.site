#!/bin/sh
# shellcheck disable=SC2034

# """
# Shared R environment configuration for Linux.
#
# @note Updated 2022-04-12.
#
# @seealso
# - `help(Startup)` for documentation on `~/.Renviron` and `Renviron.site`.
# - https://support.rstudio.com/hc/en-us/articles/215733837
# - https://cran.r-project.org/doc/manuals/r-release/
#       R-admin.html#Managing-libraries
# - https://community.rstudio.com/t/setting-up-a-site-library/3916
# - Debian example config file by Dirk Eddelbuettel.
# """

# Global variables {{{1
# ==============================================================================

KOOPA_PREFIX="${KOOPA_PREFIX:-/opt/koopa}"
KOOPA_OPT_PREFIX="${KOOPA_PREFIX}/opt"

# Package libraries {{{1
# ==============================================================================

# General:
# - `Sys.getenv()`.
# - `help(topic = "R_LIBS_USER")`.
# - `help(topic = ".libPaths")`.
#
# Bioconductor-specific:
# - https://www.bioconductor.org/developers/how-to/useDevel/
#
# Variables:
# - `%V`: R version number including the patchlevel (e.g., `2.5.0`).
# - `%v`: R version number excluding the patchlevel (e.g., `2.5`).
# - `%p`: The platform for which R was built; value of `R.version$platform`.
# - `%o`: The underlying operating system; value of `R.version$os`.
# - `%a`: The CPU architecture (CPU); value of `R.version$arch`.
#
# Note that RStudio Server can disable user package installations.
# Set `allow-package-installation=0` in `/etc/rstudio/rsession.conf`.
#
# Check the return of these in an R session:
# - `.libPaths()`
# - `.Library`
# - `.Library.site`

# Site library {{{2
# ------------------------------------------------------------------------------

R_LIBS_SITE="${R_HOME}/site-library"

# User library {{{2
# ------------------------------------------------------------------------------

# Linux default:
# R_LIBS_USER="~/R/%p-library/%v"
#
# macOS default (3.6+):
# R_LIBS_USER="~/Library/R/%v/library"
#
# Windows default:
# R_LIBS_USER="~/R/win-library/%v"
#
# `@R_PLATFORM@` can be e.g. `x86_64-pc-linux-gnu`.
# `@MAJ_MIN_VERSION@` is likely something like '3.6'.
# Set this per-user via `%p` and `%v` for platform and version.
# > R_LIBS_USER="${R_LIBS_USER-'~/R/@R_PLATFORM@-library/@MAJ_MIN_VERSION@'}"

R_LIBS_USER="${R_LIBS_SITE}"

# Default packages {{{2
# ------------------------------------------------------------------------------

# Example of setting `R_DEFAULT_PACKAGES` (from `R CMD check`).
# This loads the packages in the order given, so they appear on the search path
# in reverse order.
# > R_DEFAULT_PACKAGES="utils,grDevices,graphics,stats"

# System path {{{1
# ==============================================================================

# Restrict path, so we don't mask compiler binaries with virtual environment.
# This also greatly improves consistency when running inside RStudio Server.
PATH="/usr/bin:/bin"

# Koopa.
PATH="${KOOPA_PREFIX}/bin:${PATH}"
PATH="${KOOPA_OPT_PREFIX}/pkg-config/bin:${PATH}"
PATH="${KOOPA_OPT_PREFIX}/subversion/bin:${PATH}"
# > PATH="${KOOPA_OPT_PREFIX}/gdal/bin:${PATH}"
# > PATH="${KOOPA_OPT_PREFIX}/geos/bin:${PATH}"
# > PATH="${KOOPA_OPT_PREFIX}/proj/bin:${PATH}"

# Package configuration {{{2
# ------------------------------------------------------------------------------

# . PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/geos/lib/pkgconfig:${PKG_CONFIG_PATH}"
# > PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/gdal/lib/pkgconfig:${PKG_CONFIG_PATH}"
# > PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/proj/lib/pkgconfig:${PKG_CONFIG_PATH}"
PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/icu4c/lib/pkgconfig:${PKG_CONFIG_PATH}"
# > PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/imagemagick/lib/pkgconfig:${PKG_CONFIG_PATH}"
# > PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/lapack/lib/pkgconfig:${PKG_CONFIG_PATH}"
# > PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/openblas/lib/pkgconfig:${PKG_CONFIG_PATH}"
# > PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/openssl/lib/pkgconfig:${PKG_CONFIG_PATH}"
# > PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/pcre2/lib/pkgconfig:${PKG_CONFIG_PATH}"

R_LD_LIBRARY_PATH="${R_HOME}/lib"
R_LD_LIBRARY_PATH="/usr/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="/lib/x86_64-linux-gnu:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="/usr/local/lib:${R_LD_LIBRARY_PATH}"

R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/apr-util/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/apr/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/autoconf/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/automake/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/cmake/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/curl/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/findutils/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/fltk/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/gawk/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/gdal/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/geos/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/gettext/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/git/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/gmp/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/gnupg/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/gnutls/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/grep/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/hdf5/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/icu4c/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/imagemagick/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/jpeg/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/lapack/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/libevent/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/libidn/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/libtasn1/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/libtiff/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/libtool/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/libunistring/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/libxml2/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/libzip/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/lua/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/luarocks/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/make/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/ncurses/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/nettle/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/openblas/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/openssl/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/pcre2/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/perl/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/pkg-config/lib:${R_LD_LIBRARY_PATH}"
# . R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/proj/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/python/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/r/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/rsync/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/ruby/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/rust/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/scons/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/sed/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/serf/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/sqlite/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/subversion/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/tar/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/texinfo/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/udunits/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/xz/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/zlib/lib:${R_LD_LIBRARY_PATH}"
R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/zstd/lib:${R_LD_LIBRARY_PATH}"

# Miscellaneous {{{1
# ==============================================================================

# Alternatively, can use '/usr/bin/pager' here instead.
PAGER="${PAGER:-less}"

R_BROWSER="${R_BROWSER:-xdg-open}"

# For PDFs, default to US letter (8.5" x 11") instead of A4.
R_PAPERSIZE="letter"
R_PAPERSIZE_USER="${R_PAPERSIZE}"

# Default print command.
R_PRINTCMD="${R_PRINTCMD:-/usr/bin/lpr}"

# R can sometimes error due to time zone, unless this is set.
# This is particularly important to set on rocker Debian images.
TZ="America/New_York"

# Avoid issue with file timestamp check:
# # N  checking for future file timestamps (1.3s)
# #    unable to verify current time
# https://stackoverflow.com/questions/63613301/
_R_CHECK_SYSTEM_CLOCK_=0

# Package-specific {{{1
# ==============================================================================

# ROracle {{{2
# ------------------------------------------------------------------------------

# This requires installation of the Oracle Database Instant Client.
#
# Install basic, devel, jdbc, odbc, and sqlplus.
# Previous version on RHEL 7 VM: 12.2.0.1.0.
#
# For Debian/Ubuntu, convert the RPM into DEB format using alien.
#
# See also:
# - https://www.oracle.com/database/technologies/instant-client/
#       linux-x86-64-downloads.html
# - https://www.oracle.com/database/technologies/instant-client.html
# - http://www.oracle.com/technetwork/database/features/instant-client/
#       index-097480.html
# - https://help.ubuntu.com/community/Oracle%20Instant%20Client
# - https://docs.oracle.com/en/database/oracle/r-enterprise/1.5.1/oread/
#       installing-oracle-database-instant-client.html
#       #GUID-A61C2824-B9C7-4344-A7A2-E7FE0F05695D
#
# Do not set `LD_LIBRARY_PATH`.
# Use `/etc/ld.so.conf.d/oracle-instantclient.conf` approach instead.
# This can break GCC compilation of rhdf5, if set in bash profile.
# Contains: /usr/lib/oracle/12.2/client64/lib
#
# See also:
# - http://cran.cnr.berkeley.edu/web/packages/ROracle/INSTALL
# - https://docs.oracle.com/cd/E83411_01/OREAD/
#       installing-rstudio-server.htm#OREAD223
#
# Updated 2019-12-09.

# > OCI_VERSION="19.6"
# > ORACLE_HOME="${ORACLE_HOME-/usr/lib/oracle/${OCI_VERSION}/client64}"
# > OCI_INC="${OCI_INC-/usr/include/oracle/${OCI_VERSION}/client64}"
# > OCI_LIB="${ORACLE_HOME}/lib"
# > TNS_ADMIN="${ORACLE_HOME}/network/admin"
# > PATH="${PATH}:${ORACLE_HOME}/bin"

# remotes {{{2
# ------------------------------------------------------------------------------

# Always upgrade GitHub R packages, without prompting.
# See `remotes::update_packages()` for details.
R_REMOTES_UPGRADE="always"

# Standalone mode. remotes will use the curl, git2r and pkgbuild packages if
# they are installed to provide faster implementations for some aspects of the
# install process. However if you are using remotes to install or update these
# packages (or their reverse dependencies) using them during installation may
# fail (particularly on Windows).
#
# If you set the environment variable 'R_REMOTES_STANDALONE="true"' (e.g. in R
# 'Sys.setenv(R_REMOTES_STANDALONE="true")') you can force remotes to operate in
# standalone mode and use only its internal R implementations. This will allow
# successful installation of these packages.
R_REMOTES_STANDALONE="true"

# reticulate {{{2
# ------------------------------------------------------------------------------

# The reticulate package allows you to run Python code inside of R.

# Ensure the default location of Miniconda is standardized.
# > RETICULATE_MINICONDA_PATH="${KOOPA_OPT_PREFIX}/conda"

# Default path to virtual environments.
# If left unset, defaults to `~/.virtualenvs`.
# Check with `virtualenv_list()`.
# https://rstudio.github.io/reticulate/reference/virtualenv-tools.html
# > WORKON_HOME="${KOOPA_OPT_PREFIX}/python-virtualenvs"

# stringi {{{2
# ------------------------------------------------------------------------------

# See also:
# https://github.com/gagolews/stringi/blob/master/INSTALL

# Ensure usage of system ICU, insteading of building bundle from source.
STRINGI_DISABLE_ICU_BUNDLE=1

# Alternatively, ensure that ICU bundle is compiled from source.
# > STRINGI_DISABLE_PKG_CONFIG=1

# tools {{{2
# ------------------------------------------------------------------------------

# These values are inherited by `tools::R_user_dir()`.
R_USER_CACHE_DIR="${XDG_CACHE_HOME:-~/.cache}"
R_USER_CONFIG_DIR="${XDG_CONFIG_HOME:-~/.config}"
R_USER_DATA_DIR="${XDG_DATA_HOME:-~/.local/share}"

# R check {{{1
# ==============================================================================

# Environment variables that control the behavior of R / 'R CMD check'.

# Debian (and its derivatives) impose a set of compiler flags to prevent some
# known security issues with compiled code. These flags then become defaults
# for R as well (see eg `/etc/R/Makeconf`), but nevertheless confuse R as
# warnings get triggered.  Users, on the other hand, are often stumped about
# these. So with this variable we declare these options as known for the local
# checks on the machine this file is on.
#
# See Section 8 of the R Internals manual for many more options.
_R_CHECK_COMPILATION_FLAGS_KNOWN_="-Wformat -Werror=format-security -Wdate-time"

# Logical coercion.
# Verbose information on 'length(x) = n > 1' coercion to 'logical(1)' errors.
# Set to 'false' to disable.
#
# Note that setting these can cause Shiny Server to crash.
# https://github.com/rstudio/rstudio/issues/5268
#
# See also:
# - https://twitter.com/henrikbengtsson/status/1172155983935631360
# - https://twitter.com/henrikbengtsson/status/1188197161780989953
_R_CHECK_LENGTH_1_CONDITION_="${_R_CHECK_LENGTH_1_CONDITION_-verbose}"
_R_CHECK_LENGTH_1_LOGIC2_="${_R_CHECK_LENGTH_1_LOGIC2_-verbose}"

# Don't truncate R CMD check output.
#
# See also:
# - https://twitter.com/michael_chirico/status/1193831562724331520
# - https://yihui.name/en/2017/12/last-13-lines-of-output/
_R_CHECK_TESTS_NLINES_=0

# Bioconductor recommendations.
#
# See also:
# - https://raw.githubusercontent.com/Bioconductor/BBS/master/
#       3.11/R_env_vars.sh
# - https://github.com/Bioconductor/bioconductor_docker
# > export _R_CHECK_LENGTH_1_CONDITION_="package:_R_CHECK_PACKAGE_NAME_,abort,verbose"
# > export _R_CHECK_LENGTH_1_LOGIC2_="package:_R_CHECK_PACKAGE_NAME_,abort,verbose"
# > export _R_CHECK_TIMINGS_=0
# > export _R_CLASS_MATRIX_ARRAY_="true"
# > export _R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_="true"
export _R_CHECK_EXECUTABLES_="false"
export _R_CHECK_EXECUTABLES_EXCLUSIONS_="false"
export _R_CHECK_S3_METHODS_NOT_REGISTERED_="true"
