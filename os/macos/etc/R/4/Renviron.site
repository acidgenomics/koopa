#!/bin/sh
# shellcheck disable=SC2034

# """
# Shared R environment configuration for macOS.
#
# @note Updated 2022-04-12.
#
# @seealso
# - 'help(Startup)' for documentation on '~/.Renviron' and 'Renviron.site'.
# - https://github.com/acidgenomics/koopa/blob/master/os/linux/etc/R/
#       Renviron.site
# """

# Global variables {{{1
# ==============================================================================

HOMEBREW_PREFIX="${HOMEBREW_PREFIX:-/usr/local}"
HOMEBREW_OPT_PREFIX="${HOMEBREW_PREFIX}/opt"

KOOPA_PREFIX="${KOOPA_PREFIX:-/opt/koopa}"
KOOPA_OPT_PREFIX="${KOOPA_PREFIX}/opt"

# Package libraries {{{1
# ==============================================================================

R_LIBS_SITE="${R_HOME}/site-library"
R_LIBS_USER="${R_LIBS_SITE}"

# System path {{{1
# ==============================================================================

# Refer to CRAN website for details:
# - http://mac.r-project.org/
# - https://cran.r-project.org/bin/macosx/tools/

# Restrict path, so we don't mask compiler binaries with virtual environment.
# This also greatly improves path consistency when running inside RStudio.
PATH="/usr/bin:/bin"

# Homebrew.
# > PATH="${PATH}:${HOMEBREW_PREFIX}/bin"

# Koopa.
PATH="${KOOPA_PREFIX}/bin:${PATH}"
PATH="${KOOPA_OPT_PREFIX}/pkg-config/bin:${PATH}"
PATH="${KOOPA_OPT_PREFIX}/subversion/bin:${PATH}"

# > PATH="${KOOPA_OPT_PREFIX}/gdal/bin:${PATH}"
# > PATH="${KOOPA_OPT_PREFIX}/geos/bin:${PATH}"
# > PATH="${KOOPA_OPT_PREFIX}/proj/bin:${PATH}"

# Pandoc. Use RStudio bundled version of pandoc when possible,
# for improved R Markdown stability.
PATH="/Applications/RStudio.app/Contents/MacOS/pandoc:${PATH}"

# GNU Fortran from fxcoudert, recommended by CRAN.
PATH="/usr/local/gfortran/bin:${PATH}"

# Package configuration {{{2
# ------------------------------------------------------------------------------

PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/icu4c/lib/pkgconfig:${PKG_CONFIG_PATH}"
PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/imagemagick/lib/pkgconfig:${PKG_CONFIG_PATH}"
PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/lapack/lib/pkgconfig:${PKG_CONFIG_PATH}"
PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/openblas/lib/pkgconfig:${PKG_CONFIG_PATH}"
PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/openssl/lib/pkgconfig:${PKG_CONFIG_PATH}"
PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/zlib/lib/pkgconfig:${PKG_CONFIG_PATH}"

# > PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/gdal/lib/pkgconfig:${PKG_CONFIG_PATH}"
# > PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/geos/lib/pkgconfig:${PKG_CONFIG_PATH}"
# > PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/icu4c/lib/pkgconfig:${PKG_CONFIG_PATH}"
# > PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/imagemagick/lib/pkgconfig:${PKG_CONFIG_PATH}"
# > PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/lapack/lib/pkgconfig:${PKG_CONFIG_PATH}"
# > PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/openblas/lib/pkgconfig:${PKG_CONFIG_PATH}"
# > PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/openssl/lib/pkgconfig:${PKG_CONFIG_PATH}"
# > PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/pcre2/lib/pkgconfig:${PKG_CONFIG_PATH}"
# > PKG_CONFIG_PATH="${KOOPA_OPT_PREFIX}/proj/lib/pkgconfig:${PKG_CONFIG_PATH}"

# > R_LD_LIBRARY_PATH="${R_HOME}/lib"
# > R_LD_LIBRARY_PATH="/usr/local/lib:${R_LD_LIBRARY_PATH}"

# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/apr-util/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/apr/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/autoconf/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/automake/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/cmake/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/curl/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/findutils/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/fltk/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/gawk/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/gdal/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/geos/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/gettext/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/git/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/gmp/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/gnupg/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/gnutls/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/grep/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/hdf5/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/icu4c/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/imagemagick/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/jpeg/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/lapack/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/libevent/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/libidn/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/libtasn1/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/libtiff/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/libtool/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/libunistring/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/libxml2/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/libzip/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/lua/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/luarocks/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/make/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/ncurses/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/nettle/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/openblas/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/openssl/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/pcre2/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/perl/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/pkg-config/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/proj/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/python/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/r/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/rsync/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/ruby/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/rust/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/scons/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/sed/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/serf/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/sqlite/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/subversion/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/tar/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/texinfo/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/udunits/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/xz/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/zlib/lib:${R_LD_LIBRARY_PATH}"
# > R_LD_LIBRARY_PATH="${KOOPA_OPT_PREFIX}/zstd/lib:${R_LD_LIBRARY_PATH}"

# Miscellaneous {{{1
# ==============================================================================

# Increase this for large single-cell RNA-seq projects.
# Note that 153 is the current limit for macOS.
R_MAX_NUM_DLLS=153

# R can sometimes error due to time zone, unless this is set.
# This is particularly important to set on rocker Debian images.
TZ="America/New_York"

# Avoid issue with file timestamp check:
# # N  checking for future file timestamps (1.3s)
# #    unable to verify current time
# https://stackoverflow.com/questions/63613301/
_R_CHECK_SYSTEM_CLOCK_=0

# Package-specific {{{1
# ==============================================================================

# libxml2 {{{2
# ------------------------------------------------------------------------------

XML_CONFIG="${KOOPA_OPT_PREFIX}/libxml2/bin/xml2-config"

# remotes {{{2
# ------------------------------------------------------------------------------

# GitHub remote installs.
# Always upgrade GitHub R packages, without prompting.
# See 'remotes::update_packages()' for details.
R_REMOTES_UPGRADE="always"

# If you set the environment variable 'R_REMOTES_STANDALONE="true"' (e.g. in R
# 'Sys.setenv(R_REMOTES_STANDALONE="true")') you can force remotes to operate in
# standalone mode and use only its internal R implementations. This will allow
# successful installation of these packages.
R_REMOTES_STANDALONE="true"

# reticulate {{{2
# ------------------------------------------------------------------------------

# The reticulate package allows you to run Python code inside of R.

# Ensure the default location of Miniconda is standardized.
# > RETICULATE_MINICONDA_PATH="${KOOPA_OPT_PREFIX}/conda"

# Default path to virtual environments.
# If left unset, defaults to '~/.virtualenvs'.
# Check with 'virtualenv_list()'.
# https://rstudio.github.io/reticulate/reference/virtualenv-tools.html
# > WORKON_HOME="${KOOPA_OPT_PREFIX}/python-virtualenvs"

# stringi {{{2
# ------------------------------------------------------------------------------

# See also:
# https://github.com/gagolews/stringi/blob/master/INSTALL

# Ensure usage of system ICU, insteading of building bundle from source.
STRINGI_DISABLE_ICU_BUNDLE=1

# Alternatively, ensure that ICU bundle is compiled from source.
# > STRINGI_DISABLE_PKG_CONFIG=1

# tools / rappdirs {{{2
# ------------------------------------------------------------------------------

# These values are inherited by 'tools::R_user_dir()'.
R_USER_CACHE_DIR="${XDG_CACHE_HOME:-~/.cache}"
R_USER_CONFIG_DIR="${XDG_CONFIG_HOME:-~/.config}"
R_USER_DATA_DIR="${XDG_DATA_HOME:-~/.local/share}"

# units / udunits {{{2
# ------------------------------------------------------------------------------

# The units package requires udunits to be installed.
# Use homebrew: 'brew install udunits'.

UDUNITS2_INCLUDE="${KOOPA_OPT_PREFIX}/udunits/include"
UDUNITS2_LIBS="${KOOPA_OPT_PREFIX}/udunits/lib"
