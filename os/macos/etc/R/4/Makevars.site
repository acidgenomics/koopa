# """
# R for macOS Makevars configuration.
# Updated 2021-12-02.
#
# See also:
# - /Library/Frameworks/R.framework/Resources/etc/Makeconf
# - https://mac.r-project.org/
# - https://cran.r-project.org/doc/manuals/r-release/
#     R-admin.html#macOS-packages
# - https://cran.r-project.org/doc/manuals/r-devel/
#     R-exts.html#Using-Makevars
# """



# C compiler {{{1
# ==============================================================================

# Notes {{{2
# ------------------------------------------------------------------------------
#
# '-O3' should be faster than '-O2' (default) level optimization.
# 
# 'CXXFLAGS' do not automagically promote to 'CXX11FLAGS' (and same for C++14,
# C++17, C++20).
#
# See also:
# - https://github.com/Rdatatable/data.table/wiki/Installation
# - https://thecoatlessprofessor.com/programming/cpp/
#     r-compiler-tools-for-rcpp-on-macos/
# - https://stackoverflow.com/a/23414789
# - https://stackoverflow.com/a/37234225

# Current configuration {{{2
# ------------------------------------------------------------------------------

LOC     = /usr/local/gfortran
SDK_LOC = /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr
CC      = $(LOC)/bin/gcc
CXX11   = $(LOC)/bin/g++
CXX     = $(LOC)/bin/g++

CFLAGS     += -O3 -Wall -g -pedantic -pipe -mtune=native -std=gnu99
CXXFLAGS   += -O3 -Wall -Wno-unused -g -pedantic -pipe -mtune=native
CXX11FLAGS += -O3 -Wall -Wno-unused -g -pedantic -pipe -mtune=native
CXX14FLAGS += -O3 -Wall -Wno-unused -g -pedantic -pipe -mtune=native
CXX17FLAGS += -O3 -Wall -Wno-unused -g -pedantic -pipe -mtune=native
CXX20FLAGS += -O3 -Wall -Wno-unused -g -pedantic -pipe -mtune=native

CPPFLAGS    = -I$(LOC)/include -I$(SDK_LOC)/include
LDFLAGS     = -L$(LOC)/lib -Wl,-rpath,$(LOC)/lib



# Fortran {{{1
# ==============================================================================

# See also:
# - https://thecoatlessprofessor.com/programming/cpp/
#     rcpp-rcpparmadillo-and-os-x-mavericks-lgfortran-and-lquadmath-error/

FLIBS += -L/usr/local/gfortran/lib/gcc/x86_64-apple-darwin18/8.2.0 -L/usr/local/gfortran/lib -lgfortran -lquadmath -lm



# OpenMP {{{1
# ==============================================================================

# NOTE This requires installation of libomp OpenMP run-time built from official
# LLVM release sources using Xcode compilers.
#
# FIXME Add these checks to Rprofile.
# Check for these files:
# - /usr/local/include/omp-tools.h
# - /usr/local/include/omp.h
# - /usr/local/include/ompt.h
# - /usr/local/lib/libomp.dylib
#
# See also:
# - https://mac.r-project.org/openmp/
# - https://github.com/Rdatatable/data.table/wiki/Installation
# - https://firas.io/post/data.table_openmp/
# - https://gist.github.com/btskinner/
#     98f0501ceb21e1c8e7ff9dbaa5bf7b96#file-makevars
# - https://stackoverflow.com/questions/40904488/
# - https://iscinumpy.gitlab.io/post/omp-on-high-sierra/

# FIXME Re-enable these after installation of fs.
# > CPPFLAGS += -Xclang -fopenmp
# > LDFLAGS += -lomp
# > LIBS += -lomp

# FIXME Instead, do this specifically for data.table:
# > PKG_CPPFLAGS='-Xclang -fopenmp' PKG_LIBS=-lomp R CMD INSTALL myPackage

# FIXME Now this isn't working on macOS 12.0.1 with clang 13.0.0.

# Flags for OpenMP support that should allow packages that want to use OpenMP
# to do so (data.table), and other packages that bork with '-fopenmp' flag
# (e.g. fs, stringi) to be left alone.

SHLIB_OPENMP_CFLAGS     += -fopenmp
SHLIB_OPENMP_CXX11FLAGS += -fopenmp
SHLIB_OPENMP_CXX14FLAGS += -fopenmp
SHLIB_OPENMP_CXX17FLAGS += -fopenmp
SHLIB_OPENMP_CXX98FLAGS += -fopenmp
SHLIB_OPENMP_CXXFLAGS   += -fopenmp
SHLIB_OPENMP_FCFLAGS    += -fopenmp
SHLIB_OPENMP_FFLAGS     += -fopenmp



# OpenSSL {{{1
# ==============================================================================

# See also:
# - https://stackoverflow.com/questions/65207249/

# These values are already handled by pkgconfig, defined in Renviron.
# > CPPFLAGS += -I/usr/local/opt/openssl@1.1/include
# > LDFLAGS  += -L/usr/local/opt/openssl@1.1/lib
